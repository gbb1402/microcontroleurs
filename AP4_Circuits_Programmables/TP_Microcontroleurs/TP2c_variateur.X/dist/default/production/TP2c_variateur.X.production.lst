

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 11 09:01:57 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 07/09/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1719 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0008                     bsr             equ	8
    52     0005                     fsr0h           equ	5
    53     0004                     fsr0l           equ	4
    54     0007                     fsr1h           equ	7
    55     0006                     fsr1l           equ	6
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0001                     indf1           equ	1
    59     000B                     intcon          equ	11
    60     0002                     pc              equ	2
    61     0002                     pcl             equ	2
    62     000A                     pclath          equ	10
    63     0003                     status          equ	3
    64     0009                     wreg            equ	9
    65     0000                     INDF0           equ	0	;# 
    66     0001                     INDF1           equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR0L           equ	4	;# 
    70     0005                     FSR0H           equ	5	;# 
    71     0006                     FSR1L           equ	6	;# 
    72     0007                     FSR1H           equ	7	;# 
    73     0008                     BSR             equ	8	;# 
    74     0009                     WREG            equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PORTA           equ	12	;# 
    78     000D                     PORTB           equ	13	;# 
    79     000E                     PORTC           equ	14	;# 
    80     000F                     PORTD           equ	15	;# 
    81     0010                     PORTE           equ	16	;# 
    82     0011                     PIR1            equ	17	;# 
    83     0012                     PIR2            equ	18	;# 
    84     0013                     PIR3            equ	19	;# 
    85     0015                     TMR0            equ	21	;# 
    86     0016                     TMR1            equ	22	;# 
    87     0016                     TMR1L           equ	22	;# 
    88     0017                     TMR1H           equ	23	;# 
    89     0018                     T1CON           equ	24	;# 
    90     0019                     T1GCON          equ	25	;# 
    91     001A                     TMR2            equ	26	;# 
    92     001B                     PR2             equ	27	;# 
    93     001C                     T2CON           equ	28	;# 
    94     008C                     TRISA           equ	140	;# 
    95     008D                     TRISB           equ	141	;# 
    96     008E                     TRISC           equ	142	;# 
    97     008F                     TRISD           equ	143	;# 
    98     0090                     TRISE           equ	144	;# 
    99     0091                     PIE1            equ	145	;# 
   100     0092                     PIE2            equ	146	;# 
   101     0093                     PIE3            equ	147	;# 
   102     0095                     OPTION_REG      equ	149	;# 
   103     0096                     PCON            equ	150	;# 
   104     0097                     WDTCON          equ	151	;# 
   105     0098                     OSCTUNE         equ	152	;# 
   106     0099                     OSCCON          equ	153	;# 
   107     009A                     OSCSTAT         equ	154	;# 
   108     009B                     ADRES           equ	155	;# 
   109     009B                     ADRESL          equ	155	;# 
   110     009C                     ADRESH          equ	156	;# 
   111     009D                     ADCON0          equ	157	;# 
   112     009E                     ADCON1          equ	158	;# 
   113     009F                     ADCON2          equ	159	;# 
   114     010C                     LATA            equ	268	;# 
   115     010D                     LATB            equ	269	;# 
   116     010E                     LATC            equ	270	;# 
   117     010F                     LATD            equ	271	;# 
   118     0110                     LATE            equ	272	;# 
   119     0111                     CM1CON0         equ	273	;# 
   120     0112                     CM1CON1         equ	274	;# 
   121     0113                     CM2CON0         equ	275	;# 
   122     0114                     CM2CON1         equ	276	;# 
   123     0115                     CMOUT           equ	277	;# 
   124     0116                     BORCON          equ	278	;# 
   125     0117                     FVRCON          equ	279	;# 
   126     0118                     DAC1CON0        equ	280	;# 
   127     0119                     DAC1CON1        equ	281	;# 
   128     011A                     DAC2CON0        equ	282	;# 
   129     011B                     DAC2REF         equ	283	;# 
   130     011B                     DAC2CON1        equ	283	;# 
   131     011C                     ZCD1CON         equ	284	;# 
   132     018C                     ANSELA          equ	396	;# 
   133     018D                     ANSELB          equ	397	;# 
   134     018E                     ANSELC          equ	398	;# 
   135     018F                     ANSELD          equ	399	;# 
   136     0190                     ANSELE          equ	400	;# 
   137     0191                     PMADR           equ	401	;# 
   138     0191                     PMADRL          equ	401	;# 
   139     0192                     PMADRH          equ	402	;# 
   140     0193                     PMDAT           equ	403	;# 
   141     0193                     PMDATL          equ	403	;# 
   142     0194                     PMDATH          equ	404	;# 
   143     0195                     PMCON1          equ	405	;# 
   144     0196                     PMCON2          equ	406	;# 
   145     0197                     VREGCON         equ	407	;# 
   146     0199                     RC1REG          equ	409	;# 
   147     0199                     RCREG           equ	409	;# 
   148     0199                     RCREG1          equ	409	;# 
   149     019A                     TX1REG          equ	410	;# 
   150     019A                     TXREG1          equ	410	;# 
   151     019A                     TXREG           equ	410	;# 
   152     019B                     SP1BRG          equ	411	;# 
   153     019B                     SPBRG           equ	411	;# 
   154     019B                     SP1BRGL         equ	411	;# 
   155     019B                     SPBRG1          equ	411	;# 
   156     019B                     SPBRGL          equ	411	;# 
   157     019C                     SP1BRGH         equ	412	;# 
   158     019C                     SPBRGH          equ	412	;# 
   159     019C                     SPBRGH1         equ	412	;# 
   160     019D                     RC1STA          equ	413	;# 
   161     019D                     RCSTA1          equ	413	;# 
   162     019D                     RCSTA           equ	413	;# 
   163     019E                     TX1STA          equ	414	;# 
   164     019E                     TXSTA1          equ	414	;# 
   165     019E                     TXSTA           equ	414	;# 
   166     019F                     BAUD1CON        equ	415	;# 
   167     019F                     BAUDCON1        equ	415	;# 
   168     019F                     BAUDCTL1        equ	415	;# 
   169     019F                     BAUDCON         equ	415	;# 
   170     019F                     BAUDCTL         equ	415	;# 
   171     020C                     WPUA            equ	524	;# 
   172     020D                     WPUB            equ	525	;# 
   173     020E                     WPUC            equ	526	;# 
   174     020F                     WPUD            equ	527	;# 
   175     0210                     WPUE            equ	528	;# 
   176     0211                     SSP1BUF         equ	529	;# 
   177     0211                     SSPBUF          equ	529	;# 
   178     0212                     SSP1ADD         equ	530	;# 
   179     0212                     SSPADD          equ	530	;# 
   180     0213                     SSP1MSK         equ	531	;# 
   181     0213                     SSPMSK          equ	531	;# 
   182     0214                     SSP1STAT        equ	532	;# 
   183     0214                     SSPSTAT         equ	532	;# 
   184     0215                     SSP1CON1        equ	533	;# 
   185     0215                     SSPCON          equ	533	;# 
   186     0215                     SSPCON1         equ	533	;# 
   187     0215                     SSP1CON         equ	533	;# 
   188     0216                     SSP1CON2        equ	534	;# 
   189     0216                     SSPCON2         equ	534	;# 
   190     0217                     SSP1CON3        equ	535	;# 
   191     0217                     SSPCON3         equ	535	;# 
   192     028C                     ODCONA          equ	652	;# 
   193     028D                     ODCONB          equ	653	;# 
   194     028E                     ODCONC          equ	654	;# 
   195     028F                     ODCOND          equ	655	;# 
   196     0290                     ODCONE          equ	656	;# 
   197     0291                     CCPR1           equ	657	;# 
   198     0291                     CCPR1L          equ	657	;# 
   199     0292                     CCPR1H          equ	658	;# 
   200     0293                     CCP1CON         equ	659	;# 
   201     0293                     ECCP1CON        equ	659	;# 
   202     0298                     CCPR2           equ	664	;# 
   203     0298                     CCPR2L          equ	664	;# 
   204     0299                     CCPR2H          equ	665	;# 
   205     029A                     CCP2CON         equ	666	;# 
   206     029A                     ECCP2CON        equ	666	;# 
   207     029E                     CCPTMRS         equ	670	;# 
   208     030C                     SLRCONA         equ	780	;# 
   209     030D                     SLRCONB         equ	781	;# 
   210     030E                     SLRCONC         equ	782	;# 
   211     030F                     SLRCOND         equ	783	;# 
   212     0310                     SLRCONE         equ	784	;# 
   213     038C                     INLVLA          equ	908	;# 
   214     038D                     INLVLB          equ	909	;# 
   215     038E                     INLVLC          equ	910	;# 
   216     038F                     INLVLD          equ	911	;# 
   217     0390                     INLVLE          equ	912	;# 
   218     0391                     IOCAP           equ	913	;# 
   219     0392                     IOCAN           equ	914	;# 
   220     0393                     IOCAF           equ	915	;# 
   221     0394                     IOCBP           equ	916	;# 
   222     0395                     IOCBN           equ	917	;# 
   223     0396                     IOCBF           equ	918	;# 
   224     0397                     IOCCP           equ	919	;# 
   225     0398                     IOCCN           equ	920	;# 
   226     0399                     IOCCF           equ	921	;# 
   227     039D                     IOCEP           equ	925	;# 
   228     039E                     IOCEN           equ	926	;# 
   229     039F                     IOCEF           equ	927	;# 
   230     0415                     TMR4            equ	1045	;# 
   231     0416                     PR4             equ	1046	;# 
   232     0417                     T4CON           equ	1047	;# 
   233     041C                     TMR6            equ	1052	;# 
   234     041D                     PR6             equ	1053	;# 
   235     041E                     T6CON           equ	1054	;# 
   236     0498                     NCO1ACC         equ	1176	;# 
   237     0498                     NCO1ACCL        equ	1176	;# 
   238     0499                     NCO1ACCH        equ	1177	;# 
   239     049A                     NCO1ACCU        equ	1178	;# 
   240     049B                     NCO1INC         equ	1179	;# 
   241     049B                     NCO1INCL        equ	1179	;# 
   242     049C                     NCO1INCH        equ	1180	;# 
   243     049D                     NCO1INCU        equ	1181	;# 
   244     049E                     NCO1CON         equ	1182	;# 
   245     049F                     NCO1CLK         equ	1183	;# 
   246     0511                     OPA1CON         equ	1297	;# 
   247     0515                     OPA2CON         equ	1301	;# 
   248     0617                     PWM3DCL         equ	1559	;# 
   249     0618                     PWM3DCH         equ	1560	;# 
   250     0619                     PWM3CON         equ	1561	;# 
   251     0619                     PWM3CON0        equ	1561	;# 
   252     061A                     PWM4DCL         equ	1562	;# 
   253     061B                     PWM4DCH         equ	1563	;# 
   254     061C                     PWM4CON         equ	1564	;# 
   255     061C                     PWM4CON0        equ	1564	;# 
   256     0691                     COG1PHR         equ	1681	;# 
   257     0692                     COG1PHF         equ	1682	;# 
   258     0693                     COG1BLKR        equ	1683	;# 
   259     0694                     COG1BLKF        equ	1684	;# 
   260     0695                     COG1DBR         equ	1685	;# 
   261     0696                     COG1DBF         equ	1686	;# 
   262     0697                     COG1CON0        equ	1687	;# 
   263     0698                     COG1CON1        equ	1688	;# 
   264     0699                     COG1RIS         equ	1689	;# 
   265     069A                     COG1RSIM        equ	1690	;# 
   266     069B                     COG1FIS         equ	1691	;# 
   267     069C                     COG1FSIM        equ	1692	;# 
   268     069D                     COG1ASD0        equ	1693	;# 
   269     069E                     COG1ASD1        equ	1694	;# 
   270     069F                     COG1STR         equ	1695	;# 
   271     0E0F                     PPSLOCK         equ	3599	;# 
   272     0E10                     INTPPS          equ	3600	;# 
   273     0E11                     T0CKIPPS        equ	3601	;# 
   274     0E12                     T1CKIPPS        equ	3602	;# 
   275     0E13                     T1GPPS          equ	3603	;# 
   276     0E14                     CCP1PPS         equ	3604	;# 
   277     0E15                     CCP2PPS         equ	3605	;# 
   278     0E17                     COGINPPS        equ	3607	;# 
   279     0E20                     SSPCLKPPS       equ	3616	;# 
   280     0E21                     SSPDATPPS       equ	3617	;# 
   281     0E22                     SSPSSPPS        equ	3618	;# 
   282     0E24                     RXPPS           equ	3620	;# 
   283     0E25                     CKPPS           equ	3621	;# 
   284     0E28                     CLCIN0PPS       equ	3624	;# 
   285     0E29                     CLCIN1PPS       equ	3625	;# 
   286     0E2A                     CLCIN2PPS       equ	3626	;# 
   287     0E2B                     CLCIN3PPS       equ	3627	;# 
   288     0E90                     RA0PPS          equ	3728	;# 
   289     0E91                     RA1PPS          equ	3729	;# 
   290     0E92                     RA2PPS          equ	3730	;# 
   291     0E93                     RA3PPS          equ	3731	;# 
   292     0E94                     RA4PPS          equ	3732	;# 
   293     0E95                     RA5PPS          equ	3733	;# 
   294     0E96                     RA6PPS          equ	3734	;# 
   295     0E97                     RA7PPS          equ	3735	;# 
   296     0E98                     RB0PPS          equ	3736	;# 
   297     0E99                     RB1PPS          equ	3737	;# 
   298     0E9A                     RB2PPS          equ	3738	;# 
   299     0E9B                     RB3PPS          equ	3739	;# 
   300     0E9C                     RB4PPS          equ	3740	;# 
   301     0E9D                     RB5PPS          equ	3741	;# 
   302     0E9E                     RB6PPS          equ	3742	;# 
   303     0E9F                     RB7PPS          equ	3743	;# 
   304     0EA0                     RC0PPS          equ	3744	;# 
   305     0EA1                     RC1PPS          equ	3745	;# 
   306     0EA2                     RC2PPS          equ	3746	;# 
   307     0EA3                     RC3PPS          equ	3747	;# 
   308     0EA4                     RC4PPS          equ	3748	;# 
   309     0EA5                     RC5PPS          equ	3749	;# 
   310     0EA6                     RC6PPS          equ	3750	;# 
   311     0EA7                     RC7PPS          equ	3751	;# 
   312     0EA8                     RD0PPS          equ	3752	;# 
   313     0EA9                     RD1PPS          equ	3753	;# 
   314     0EAA                     RD2PPS          equ	3754	;# 
   315     0EAB                     RD3PPS          equ	3755	;# 
   316     0EAC                     RD4PPS          equ	3756	;# 
   317     0EAD                     RD5PPS          equ	3757	;# 
   318     0EAE                     RD6PPS          equ	3758	;# 
   319     0EAF                     RD7PPS          equ	3759	;# 
   320     0EB0                     RE0PPS          equ	3760	;# 
   321     0EB1                     RE1PPS          equ	3761	;# 
   322     0EB2                     RE2PPS          equ	3762	;# 
   323     0F0F                     CLCDATA         equ	3855	;# 
   324     0F10                     CLC1CON         equ	3856	;# 
   325     0F11                     CLC1POL         equ	3857	;# 
   326     0F12                     CLC1SEL0        equ	3858	;# 
   327     0F13                     CLC1SEL1        equ	3859	;# 
   328     0F14                     CLC1SEL2        equ	3860	;# 
   329     0F15                     CLC1SEL3        equ	3861	;# 
   330     0F16                     CLC1GLS0        equ	3862	;# 
   331     0F17                     CLC1GLS1        equ	3863	;# 
   332     0F18                     CLC1GLS2        equ	3864	;# 
   333     0F19                     CLC1GLS3        equ	3865	;# 
   334     0F1A                     CLC2CON         equ	3866	;# 
   335     0F1B                     CLC2POL         equ	3867	;# 
   336     0F1C                     CLC2SEL0        equ	3868	;# 
   337     0F1D                     CLC2SEL1        equ	3869	;# 
   338     0F1E                     CLC2SEL2        equ	3870	;# 
   339     0F1F                     CLC2SEL3        equ	3871	;# 
   340     0F20                     CLC2GLS0        equ	3872	;# 
   341     0F21                     CLC2GLS1        equ	3873	;# 
   342     0F22                     CLC2GLS2        equ	3874	;# 
   343     0F23                     CLC2GLS3        equ	3875	;# 
   344     0F24                     CLC3CON         equ	3876	;# 
   345     0F25                     CLC3POL         equ	3877	;# 
   346     0F26                     CLC3SEL0        equ	3878	;# 
   347     0F27                     CLC3SEL1        equ	3879	;# 
   348     0F28                     CLC3SEL2        equ	3880	;# 
   349     0F29                     CLC3SEL3        equ	3881	;# 
   350     0F2A                     CLC3GLS0        equ	3882	;# 
   351     0F2B                     CLC3GLS1        equ	3883	;# 
   352     0F2C                     CLC3GLS2        equ	3884	;# 
   353     0F2D                     CLC3GLS3        equ	3885	;# 
   354     0F2E                     CLC4CON         equ	3886	;# 
   355     0F2F                     CLC4POL         equ	3887	;# 
   356     0F30                     CLC4SEL0        equ	3888	;# 
   357     0F31                     CLC4SEL1        equ	3889	;# 
   358     0F32                     CLC4SEL2        equ	3890	;# 
   359     0F33                     CLC4SEL3        equ	3891	;# 
   360     0F34                     CLC4GLS0        equ	3892	;# 
   361     0F35                     CLC4GLS1        equ	3893	;# 
   362     0F36                     CLC4GLS2        equ	3894	;# 
   363     0F37                     CLC4GLS3        equ	3895	;# 
   364     0FE4                     STATUS_SHAD     equ	4068	;# 
   365     0FE5                     WREG_SHAD       equ	4069	;# 
   366     0FE6                     BSR_SHAD        equ	4070	;# 
   367     0FE7                     PCLATH_SHAD     equ	4071	;# 
   368     0FE8                     FSR0L_SHAD      equ	4072	;# 
   369     0FE9                     FSR0H_SHAD      equ	4073	;# 
   370     0FEA                     FSR1L_SHAD      equ	4074	;# 
   371     0FEB                     FSR1H_SHAD      equ	4075	;# 
   372     0FED                     STKPTR          equ	4077	;# 
   373     0FEE                     TOSL            equ	4078	;# 
   374     0FEF                     TOSH            equ	4079	;# 
   375     001B                     _PR2            set	27
   376     001C                     _T2CONbits      set	28
   377     009B                     _ADRESL         set	155
   378     009C                     _ADRESH         set	156
   379     009D                     _ADCON0bits     set	157
   380     009D                     _ADCON0         set	157
   381     009E                     _ADCON1         set	158
   382     008C                     _TRISA          set	140
   383     008F                     _TRISD          set	143
   384     010F                     _LATD           set	271
   385     018C                     _ANSELA         set	396
   386     061A                     _PWM4DCL        set	1562
   387     061B                     _PWM4DCH        set	1563
   388     061C                     _PWM4CONbits    set	1564
   389     0EA8                     _RD0PPS         set	3752
   390                           
   391                           	psect	cinit
   392     07FD                     start_initialization:	
   393                           ; #config settings
   394                           
   395     07FD                     __initialization:
   396     07FD                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399     07FD                     __end_of__initialization:
   400     07FD  0020               	movlb	0
   401     07FE  3187  2F46         	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	cstackCOMMON
   404     0070                     __pcstackCOMMON:
   405     0070                     ?_init_ports:
   406     0070                     ?_init_pwm4:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_init_ADC:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ?_read_ADC:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?___wmul:	
   419                           ; 2 bytes @ 0x0
   420                           
   421     0070                     ___wmul@multiplier:	
   422                           ; 2 bytes @ 0x0
   423                           
   424     0070                     ??_init_ports:	
   425                           ; 2 bytes @ 0x0
   426                           
   427     0070                     ??_init_pwm4:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ??_init_ADC:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435     0070                     	ds	2
   436     0072                     ___wmul@multiplicand:
   437     0072                     ??_read_ADC:	
   438                           ; 2 bytes @ 0x2
   439                           
   440                           
   441                           ; 1 bytes @ 0x2
   442     0072                     	ds	2
   443     0074                     ___wmul@product:
   444     0074                     ??___wmul:	
   445                           ; 2 bytes @ 0x4
   446                           
   447                           
   448                           ; 1 bytes @ 0x4
   449     0074                     	ds	2
   450     0076                     ?___lwdiv:
   451     0076                     ___lwdiv@divisor:	
   452                           ; 2 bytes @ 0x6
   453                           
   454                           
   455                           ; 2 bytes @ 0x6
   456     0076                     	ds	2
   457     0078                     ___lwdiv@dividend:
   458                           
   459                           ; 2 bytes @ 0x8
   460     0078                     	ds	2
   461     007A                     ___lwdiv@quotient:
   462     007A                     ??___lwdiv:	
   463                           ; 2 bytes @ 0xA
   464                           
   465                           
   466                           ; 1 bytes @ 0xA
   467     007A                     	ds	2
   468     007C                     ___lwdiv@counter:
   469                           
   470                           ; 1 bytes @ 0xC
   471     007C                     	ds	1
   472     007D                     ??_main:
   473                           
   474                           	psect	cstackBANK0
   475     0020                     __pcstackBANK0:	
   476                           ; 1 bytes @ 0xD
   477                           
   478     0020                     ?_set_pwm_duty_cycle:
   479     0020                     set_pwm_duty_cycle@adc_value:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484     0020                     	ds	2
   485     0022                     ??_set_pwm_duty_cycle:
   486                           
   487                           ; 1 bytes @ 0x2
   488     0022                     	ds	2
   489     0024                     set_pwm_duty_cycle@palier:
   490                           
   491                           ; 2 bytes @ 0x4
   492     0024                     	ds	2
   493     0026                     set_pwm_duty_cycle@pwm_value:
   494                           
   495                           ; 2 bytes @ 0x6
   496     0026                     	ds	2
   497     0028                     main@adc_value:
   498                           
   499                           ; 2 bytes @ 0x8
   500     0028                     	ds	2
   501                           
   502                           	psect	maintext
   503     0746                     __pmaintext:	
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 62 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  adc_value       2    8[BANK0 ] unsigned int 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : B1F/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        2 bytes
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		_init_ADC
   531 ;;		_init_ports
   532 ;;		_init_pwm4
   533 ;;		_read_ADC
   534 ;;		_set_pwm_duty_cycle
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540     0746                     _main:	
   541                           ;psect for function _main
   542                           
   543     0746                     l732:	
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   546                           
   547                           
   548                           ;main.c: 63:     init_ports();
   549     0746  3187  271F  3187   	fcall	_init_ports
   550     0749                     l734:
   551                           
   552                           ;main.c: 64:     init_pwm4();
   553     0749  3187  2735  3187   	fcall	_init_pwm4
   554     074C                     l736:
   555                           
   556                           ;main.c: 65:     init_ADC();
   557     074C  3187  2719  3187   	fcall	_init_ADC
   558     074F                     l738:
   559                           
   560                           ;main.c: 68:         unsigned int adc_value = read_ADC();
   561     074F  3187  272A  3187   	fcall	_read_ADC
   562     0752  0871               	movf	?_read_ADC+1,w
   563     0753  0020               	movlb	0	; select bank0
   564     0754  00A9               	movwf	main@adc_value+1
   565     0755  0870               	movf	?_read_ADC,w
   566     0756  00A8               	movwf	main@adc_value
   567     0757                     l740:
   568                           
   569                           ;main.c: 69:         set_pwm_duty_cycle(adc_value);
   570     0757  0829               	movf	main@adc_value+1,w
   571     0758  00A1               	movwf	set_pwm_duty_cycle@adc_value+1
   572     0759  0828               	movf	main@adc_value,w
   573     075A  00A0               	movwf	set_pwm_duty_cycle@adc_value
   574     075B  3187  27BA  3187   	fcall	_set_pwm_duty_cycle
   575     075E  2F4F               	goto	l738
   576     075F  3180  2802         	ljmp	start
   577     0761                     __end_of_main:
   578                           
   579                           	psect	text1
   580     07BA                     __ptext1:	
   581 ;; *************** function _set_pwm_duty_cycle *****************
   582 ;; Defined at:
   583 ;;		line 53 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  adc_value       2    0[BANK0 ] unsigned int 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  pwm_value       2    6[BANK0 ] unsigned int 
   588 ;;  palier          2    4[BANK0 ] unsigned int 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   599 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   600 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   602 ;;Total ram usage:        8 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 1
   605 ;; This function calls:
   606 ;;		___lwdiv
   607 ;;		___wmul
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     07BA                     _set_pwm_duty_cycle:	
   614                           ;psect for function _set_pwm_duty_cycle
   615                           
   616     07BA                     l726:	
   617                           ;incstack = 0
   618                           ; Regs used in _set_pwm_duty_cycle: [wreg+status,2+status,0+pclath+cstack]
   619                           
   620                           
   621                           ;main.c: 54:     unsigned int palier = adc_value / 102;
   622     07BA  3066               	movlw	102
   623     07BB  00F6               	movwf	___lwdiv@divisor
   624     07BC  3000               	movlw	0
   625     07BD  00F7               	movwf	___lwdiv@divisor+1
   626     07BE  0020               	movlb	0	; select bank0
   627     07BF  0821               	movf	set_pwm_duty_cycle@adc_value+1,w
   628     07C0  00F9               	movwf	___lwdiv@dividend+1
   629     07C1  0820               	movf	set_pwm_duty_cycle@adc_value,w
   630     07C2  00F8               	movwf	___lwdiv@dividend
   631     07C3  3187  2780  3187   	fcall	___lwdiv
   632     07C6  0877               	movf	?___lwdiv+1,w
   633     07C7  0020               	movlb	0	; select bank0
   634     07C8  00A5               	movwf	set_pwm_duty_cycle@palier+1
   635     07C9  0876               	movf	?___lwdiv,w
   636     07CA  00A4               	movwf	set_pwm_duty_cycle@palier
   637                           
   638                           ;main.c: 55:     unsigned int pwm_value = (palier * 199) / 10;
   639     07CB  300A               	movlw	10
   640     07CC  00F6               	movwf	___lwdiv@divisor
   641     07CD  3000               	movlw	0
   642     07CE  00F7               	movwf	___lwdiv@divisor+1
   643     07CF  0825               	movf	set_pwm_duty_cycle@palier+1,w
   644     07D0  00F1               	movwf	___wmul@multiplier+1
   645     07D1  0824               	movf	set_pwm_duty_cycle@palier,w
   646     07D2  00F0               	movwf	___wmul@multiplier
   647     07D3  30C7               	movlw	199
   648     07D4  00F2               	movwf	___wmul@multiplicand
   649     07D5  3000               	movlw	0
   650     07D6  00F3               	movwf	___wmul@multiplicand+1
   651     07D7  3187  2761  3187   	fcall	___wmul
   652     07DA  0871               	movf	?___wmul+1,w
   653     07DB  00F9               	movwf	___lwdiv@dividend+1
   654     07DC  0870               	movf	?___wmul,w
   655     07DD  00F8               	movwf	___lwdiv@dividend
   656     07DE  3187  2780  3187   	fcall	___lwdiv
   657     07E1  0877               	movf	?___lwdiv+1,w
   658     07E2  0020               	movlb	0	; select bank0
   659     07E3  00A7               	movwf	set_pwm_duty_cycle@pwm_value+1
   660     07E4  0876               	movf	?___lwdiv,w
   661     07E5  00A6               	movwf	set_pwm_duty_cycle@pwm_value
   662     07E6                     l728:
   663                           
   664                           ;main.c: 57:     PWM4DCH = (pwm_value >> 2) & 0xFF;
   665     07E6  0827               	movf	set_pwm_duty_cycle@pwm_value+1,w
   666     07E7  00A3               	movwf	??_set_pwm_duty_cycle+1
   667     07E8  0826               	movf	set_pwm_duty_cycle@pwm_value,w
   668     07E9  00A2               	movwf	??_set_pwm_duty_cycle
   669     07EA  36A3               	lsrf	??_set_pwm_duty_cycle+1,f
   670     07EB  0CA2               	rrf	??_set_pwm_duty_cycle,f
   671     07EC  36A3               	lsrf	??_set_pwm_duty_cycle+1,f
   672     07ED  0CA2               	rrf	??_set_pwm_duty_cycle,f
   673     07EE  0822               	movf	??_set_pwm_duty_cycle,w
   674     07EF  002C               	movlb	12	; select bank12
   675     07F0  009B               	movwf	27	;volatile
   676     07F1                     l730:
   677                           
   678                           ;main.c: 58:     PWM4DCL = (pwm_value << 6) & 0xC0;
   679     07F1  0020               	movlb	0	; select bank0
   680     07F2  0826               	movf	set_pwm_duty_cycle@pwm_value,w
   681     07F3  00A2               	movwf	??_set_pwm_duty_cycle
   682     07F4  3006               	movlw	6
   683     07F5                     u265:
   684     07F5  35A2               	lslf	??_set_pwm_duty_cycle,f
   685     07F6  0B89               	decfsz	9,f
   686     07F7  2FF5               	goto	u265
   687     07F8  0822               	movf	??_set_pwm_duty_cycle,w
   688     07F9  39C0               	andlw	192
   689     07FA  002C               	movlb	12	; select bank12
   690     07FB  009A               	movwf	26	;volatile
   691     07FC                     l48:
   692     07FC  0008               	return
   693     07FD                     __end_of_set_pwm_duty_cycle:
   694                           
   695                           	psect	text2
   696     0761                     __ptext2:	
   697 ;; *************** function ___wmul *****************
   698 ;; Defined at:
   699 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  multiplier      2    0[COMMON] unsigned int 
   702 ;;  multiplicand    2    2[COMMON] unsigned int 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  product         2    4[COMMON] unsigned int 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  2    0[COMMON] unsigned int 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   718 ;;Total ram usage:        6 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_set_pwm_duty_cycle
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727     0761                     ___wmul:	
   728                           ;psect for function ___wmul
   729                           
   730     0761                     l662:	
   731                           ;incstack = 0
   732                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   733                           
   734     0761  01F4               	clrf	___wmul@product
   735     0762  01F5               	clrf	___wmul@product+1
   736     0763                     l664:
   737     0763  1C70               	btfss	___wmul@multiplier,0
   738     0764  2F66               	goto	u141
   739     0765  2F67               	goto	u140
   740     0766                     u141:
   741     0766  2F6B               	goto	l124
   742     0767                     u140:
   743     0767                     l666:
   744     0767  0872               	movf	___wmul@multiplicand,w
   745     0768  07F4               	addwf	___wmul@product,f
   746     0769  0873               	movf	___wmul@multiplicand+1,w
   747     076A  3DF5               	addwfc	___wmul@product+1,f
   748     076B                     l124:
   749     076B  3001               	movlw	1
   750     076C                     u155:
   751     076C  35F2               	lslf	___wmul@multiplicand,f
   752     076D  0DF3               	rlf	___wmul@multiplicand+1,f
   753     076E  0B89               	decfsz	9,f
   754     076F  2F6C               	goto	u155
   755     0770                     l668:
   756     0770  3001               	movlw	1
   757     0771                     u165:
   758     0771  36F1               	lsrf	___wmul@multiplier+1,f
   759     0772  0CF0               	rrf	___wmul@multiplier,f
   760     0773  0B89               	decfsz	9,f
   761     0774  2F71               	goto	u165
   762     0775                     l670:
   763     0775  0870               	movf	___wmul@multiplier,w
   764     0776  0471               	iorwf	___wmul@multiplier+1,w
   765     0777  1D03               	btfss	3,2
   766     0778  2F7A               	goto	u171
   767     0779  2F7B               	goto	u170
   768     077A                     u171:
   769     077A  2F63               	goto	l664
   770     077B                     u170:
   771     077B                     l672:
   772     077B  0875               	movf	___wmul@product+1,w
   773     077C  00F1               	movwf	?___wmul+1
   774     077D  0874               	movf	___wmul@product,w
   775     077E  00F0               	movwf	?___wmul
   776     077F                     l126:
   777     077F  0008               	return
   778     0780                     __end_of___wmul:
   779                           
   780                           	psect	text3
   781     0780                     __ptext3:	
   782 ;; *************** function ___lwdiv *****************
   783 ;; Defined at:
   784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  divisor         2    6[COMMON] unsigned int 
   787 ;;  dividend        2    8[COMMON] unsigned int 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  quotient        2   10[COMMON] unsigned int 
   790 ;;  counter         1   12[COMMON] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2    6[COMMON] unsigned int 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   804 ;;Total ram usage:        7 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_set_pwm_duty_cycle
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813     0780                     ___lwdiv:	
   814                           ;psect for function ___lwdiv
   815                           
   816     0780                     l676:	
   817                           ;incstack = 0
   818                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   819                           
   820     0780  01FA               	clrf	___lwdiv@quotient
   821     0781  01FB               	clrf	___lwdiv@quotient+1
   822     0782                     l678:
   823     0782  0876               	movf	___lwdiv@divisor,w
   824     0783  0477               	iorwf	___lwdiv@divisor+1,w
   825     0784  1903               	btfsc	3,2
   826     0785  2F87               	goto	u181
   827     0786  2F88               	goto	u180
   828     0787                     u181:
   829     0787  2FB5               	goto	l698
   830     0788                     u180:
   831     0788                     l680:
   832     0788  3001               	movlw	1
   833     0789  00FC               	movwf	___lwdiv@counter
   834     078A  2F92               	goto	l686
   835     078B                     l682:
   836     078B  3001               	movlw	1
   837     078C                     u195:
   838     078C  35F6               	lslf	___lwdiv@divisor,f
   839     078D  0DF7               	rlf	___lwdiv@divisor+1,f
   840     078E  0B89               	decfsz	9,f
   841     078F  2F8C               	goto	u195
   842     0790                     l684:
   843     0790  3001               	movlw	1
   844     0791  07FC               	addwf	___lwdiv@counter,f
   845     0792                     l686:
   846     0792  1FF7               	btfss	___lwdiv@divisor+1,7
   847     0793  2F95               	goto	u201
   848     0794  2F96               	goto	u200
   849     0795                     u201:
   850     0795  2F8B               	goto	l682
   851     0796                     u200:
   852     0796                     l688:
   853     0796  3001               	movlw	1
   854     0797                     u215:
   855     0797  35FA               	lslf	___lwdiv@quotient,f
   856     0798  0DFB               	rlf	___lwdiv@quotient+1,f
   857     0799  0B89               	decfsz	9,f
   858     079A  2F97               	goto	u215
   859     079B  0877               	movf	___lwdiv@divisor+1,w
   860     079C  0279               	subwf	___lwdiv@dividend+1,w
   861     079D  1D03               	skipz
   862     079E  2FA1               	goto	u225
   863     079F  0876               	movf	___lwdiv@divisor,w
   864     07A0  0278               	subwf	___lwdiv@dividend,w
   865     07A1                     u225:
   866     07A1  1C03               	skipc
   867     07A2  2FA4               	goto	u221
   868     07A3  2FA5               	goto	u220
   869     07A4                     u221:
   870     07A4  2FAA               	goto	l694
   871     07A5                     u220:
   872     07A5                     l690:
   873     07A5  0876               	movf	___lwdiv@divisor,w
   874     07A6  02F8               	subwf	___lwdiv@dividend,f
   875     07A7  0877               	movf	___lwdiv@divisor+1,w
   876     07A8  3BF9               	subwfb	___lwdiv@dividend+1,f
   877     07A9                     l692:
   878     07A9  147A               	bsf	___lwdiv@quotient,0
   879     07AA                     l694:
   880     07AA  3001               	movlw	1
   881     07AB                     u235:
   882     07AB  36F7               	lsrf	___lwdiv@divisor+1,f
   883     07AC  0CF6               	rrf	___lwdiv@divisor,f
   884     07AD  0B89               	decfsz	9,f
   885     07AE  2FAB               	goto	u235
   886     07AF                     l696:
   887     07AF  3001               	movlw	1
   888     07B0  02FC               	subwf	___lwdiv@counter,f
   889     07B1  1D03               	btfss	3,2
   890     07B2  2FB4               	goto	u241
   891     07B3  2FB5               	goto	u240
   892     07B4                     u241:
   893     07B4  2F96               	goto	l688
   894     07B5                     u240:
   895     07B5                     l698:
   896     07B5  087B               	movf	___lwdiv@quotient+1,w
   897     07B6  00F7               	movwf	?___lwdiv+1
   898     07B7  087A               	movf	___lwdiv@quotient,w
   899     07B8  00F6               	movwf	?___lwdiv
   900     07B9                     l404:
   901     07B9  0008               	return
   902     07BA                     __end_of___lwdiv:
   903                           
   904                           	psect	text4
   905     072A                     __ptext4:	
   906 ;; *************** function _read_ADC *****************
   907 ;; Defined at:
   908 ;;		line 46 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  2    0[COMMON] unsigned int 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   926 ;;Total ram usage:        2 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935     072A                     _read_ADC:	
   936                           ;psect for function _read_ADC
   937                           
   938     072A                     l720:	
   939                           ;incstack = 0
   940                           ; Regs used in _read_ADC: [wreg]
   941                           
   942                           
   943                           ;main.c: 47:     ADCON0bits.GO = 1;
   944     072A  0021               	movlb	1	; select bank1
   945     072B  149D               	bsf	29,1	;volatile
   946     072C                     l42:	
   947                           ;main.c: 48:     while (ADCON0bits.GO);
   948                           
   949     072C  189D               	btfsc	29,1	;volatile
   950     072D  2F2F               	goto	u251
   951     072E  2F30               	goto	u250
   952     072F                     u251:
   953     072F  2F2C               	goto	l42
   954     0730                     u250:
   955     0730                     l722:
   956                           
   957                           ;main.c: 49:     return ((ADRESH << 8) + ADRESL);
   958     0730  081C               	movf	28,w	;volatile
   959     0731  00F1               	movwf	?_read_ADC+1
   960     0732  081B               	movf	27,w	;volatile
   961     0733  00F0               	movwf	?_read_ADC
   962     0734                     l45:
   963     0734  0008               	return
   964     0735                     __end_of_read_ADC:
   965                           
   966                           	psect	text5
   967     0735                     __ptext5:	
   968 ;; *************** function _init_pwm4 *****************
   969 ;; Defined at:
   970 ;;		line 29 in file "main.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        0 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997     0735                     _init_pwm4:	
   998                           ;psect for function _init_pwm4
   999                           
  1000     0735                     l708:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _init_pwm4: [wreg+status,2+status,0]
  1003                           
  1004                           
  1005                           ;main.c: 30:     T2CONbits.T2CKPS = 0b10;
  1006     0735  0020               	movlb	0	; select bank0
  1007     0736  081C               	movf	28,w	;volatile
  1008     0737  39FC               	andlw	-4
  1009     0738  3802               	iorlw	2
  1010     0739  009C               	movwf	28	;volatile
  1011                           
  1012                           ;main.c: 31:     T2CONbits.T2OUTPS = 0b0000;
  1013     073A  3087               	movlw	-121
  1014     073B  059C               	andwf	28,f	;volatile
  1015     073C                     l710:
  1016                           
  1017                           ;main.c: 32:     PR2 = 199;
  1018     073C  30C7               	movlw	199
  1019     073D  009B               	movwf	27	;volatile
  1020     073E                     l712:
  1021                           
  1022                           ;main.c: 34:     PWM4CONbits.PWM4EN = 1;
  1023     073E  002C               	movlb	12	; select bank12
  1024     073F  179C               	bsf	28,7	;volatile
  1025     0740                     l714:
  1026                           
  1027                           ;main.c: 35:     RD0PPS = 0x0F;
  1028     0740  300F               	movlw	15
  1029     0741  003D               	movlb	29	; select bank29
  1030     0742  00A8               	movwf	40	;volatile
  1031     0743                     l716:
  1032                           
  1033                           ;main.c: 36:     T2CONbits.TMR2ON = 1;
  1034     0743  0020               	movlb	0	; select bank0
  1035     0744  151C               	bsf	28,2	;volatile
  1036     0745                     l36:
  1037     0745  0008               	return
  1038     0746                     __end_of_init_pwm4:
  1039                           
  1040                           	psect	text6
  1041     071F                     __ptext6:	
  1042 ;; *************** function _init_ports *****************
  1043 ;; Defined at:
  1044 ;;		line 19 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		status,2
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071     071F                     _init_ports:	
  1072                           ;psect for function _init_ports
  1073                           
  1074     071F                     l702:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _init_ports: [status,2]
  1077                           
  1078                           
  1079                           ;main.c: 20:     TRISD = 0x00;
  1080     071F  0021               	movlb	1	; select bank1
  1081     0720  018F               	clrf	15	;volatile
  1082                           
  1083                           ;main.c: 21:     LATD = 0x00;
  1084     0721  0022               	movlb	2	; select bank2
  1085     0722  018F               	clrf	15	;volatile
  1086     0723                     l704:
  1087                           
  1088                           ;main.c: 24:     TRISA = 0xFF;
  1089     0723  30FF               	movlw	255
  1090     0724  0021               	movlb	1	; select bank1
  1091     0725  008C               	movwf	12	;volatile
  1092     0726                     l706:
  1093                           
  1094                           ;main.c: 25:     ANSELA = 0xFF;
  1095     0726  30FF               	movlw	255
  1096     0727  0023               	movlb	3	; select bank3
  1097     0728  008C               	movwf	12	;volatile
  1098     0729                     l33:
  1099     0729  0008               	return
  1100     072A                     __end_of_init_ports:
  1101                           
  1102                           	psect	text7
  1103     0719                     __ptext7:	
  1104 ;; *************** function _init_ADC *****************
  1105 ;; Defined at:
  1106 ;;		line 40 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		None
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133     0719                     _init_ADC:	
  1134                           ;psect for function _init_ADC
  1135                           
  1136     0719                     l718:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _init_ADC: []
  1139                           
  1140                           
  1141                           ;main.c: 41:     ADCON1 = 0x80;
  1142     0719  3080               	movlw	128
  1143     071A  0021               	movlb	1	; select bank1
  1144     071B  009E               	movwf	30	;volatile
  1145                           
  1146                           ;main.c: 42:     ADCON0 = 0x01;
  1147     071C  3001               	movlw	1
  1148     071D  009D               	movwf	29	;volatile
  1149     071E                     l39:
  1150     071E  0008               	return
  1151     071F                     __end_of_init_ADC:
  1152     0003                     ___latbits      equ	3
  1153     007E                     btemp           set	126	;btemp
  1154     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      10
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _set_pwm_duty_cycle->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_set_pwm_duty_cycle

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     374
                                              8 BANK0      2     2      0
                           _init_ADC
                         _init_ports
                          _init_pwm4
                           _read_ADC
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_pwm_duty_cycle                                   8     6      2     351
                                              0 BANK0      8     6      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ADC
   _init_ports
   _init_pwm4
   _read_ADC
   _set_pwm_duty_cycle
     ___lwdiv
       ___wmul (ARG)
     ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14     13      13     92.9%
BANK0               80     10      10     12.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      23      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 11 09:01:57 2025

                         l33 0729                           l42 072C                           l36 0745  
                         l45 0734                           l39 071E                           l48 07FC  
        ___wmul@multiplicand 0072                          l124 076B                          l126 077F  
                        l404 07B9                          l702 071F                          l710 073C  
                        l704 0723                          l712 073E                          l720 072A  
                        l706 0726                          l714 0740                          l722 0730  
                        l730 07F1                          l716 0743                          l708 0735  
                        l740 0757                          l732 0746                          l718 0719  
                        l670 0775                          l662 0761                          l726 07BA  
                        l734 0749                          l680 0788                          l672 077B  
                        l664 0763                          l728 07E6                          l736 074C  
                        l690 07A5                          l682 078B                          l666 0767  
                        l738 074F                          l692 07A9                          l684 0790  
                        l676 0780                          l668 0770                          l694 07AA  
                        l686 0792                          l678 0782                          l696 07AF  
                        l688 0796                          l698 07B5                          u200 0796  
                        u201 0795                          u220 07A5                          u140 0767  
                        u221 07A4                          u141 0766                          u215 0797  
                        u240 07B5                          u241 07B4                          u225 07A1  
                        u250 0730                          u170 077B                          u251 072F  
                        u235 07AB                          u171 077A                          u155 076C  
                        u180 0788                          u181 0787                          u165 0771  
                        _PR2 001B                          u265 07F5                          u195 078C  
set_pwm_duty_cycle@adc_value 0020                          wreg 0009                         _LATD 010F  
                       _main 0746                         btemp 007E                         start 0002  
                      ?_main 0070              __end_of___lwdiv 07BA                        _TRISA 008C  
                      _TRISD 008F                        status 0003                        wtemp0 007E  
              main@adc_value 0028              __initialization 07FD                 __end_of_main 0761  
set_pwm_duty_cycle@pwm_value 0026                       ??_main 007D                       _ADCON0 009D  
                     _ADCON1 009E                       _ADRESH 009C                       _ADRESL 009B  
                     _ANSELA 018C                       _RD0PPS 0EA8           _set_pwm_duty_cycle 07BA  
        ?_set_pwm_duty_cycle 0020                       ___wmul 0761             __end_of_init_ADC 071F  
                  ??___lwdiv 007A             __end_of_read_ADC 0735         ??_set_pwm_duty_cycle 0022  
    __end_of__initialization 07FD               __pcstackCOMMON 0070     set_pwm_duty_cycle@palier 0024  
                 __pmaintext 0746                      ?___wmul 0070                      _PWM4DCH 061B  
                    _PWM4DCL 061A                    ?_init_ADC 0070                    ?_read_ADC 0070  
                    ___lwdiv 0780                   _init_ports 071F                      __ptext1 07BA  
                    __ptext2 0761                      __ptext3 0780                      __ptext4 072A  
                    __ptext5 0735                      __ptext6 071F                      __ptext7 0719  
                  _T2CONbits 001C            __end_of_init_pwm4 0746         end_of_initialization 07FD  
                 ??_init_ADC 0070                   ??_read_ADC 0072               __end_of___wmul 0780  
                ?_init_ports 0070          start_initialization 07FD                     ??___wmul 0074  
                  ___latbits 0003                __pcstackBANK0 0020             ___lwdiv@dividend 0078  
                   ?___lwdiv 0076             ___lwdiv@quotient 007A                    _init_pwm4 0735  
             ___wmul@product 0074                   _ADCON0bits 009D            ___wmul@multiplier 0070  
                 ?_init_pwm4 0070                 ??_init_ports 0070              ___lwdiv@divisor 0076  
            ___lwdiv@counter 007C                     _init_ADC 0719                     _read_ADC 072A  
         __end_of_init_ports 072A   __end_of_set_pwm_duty_cycle 07FD                  _PWM4CONbits 061C  
                ??_init_pwm4 0070  
