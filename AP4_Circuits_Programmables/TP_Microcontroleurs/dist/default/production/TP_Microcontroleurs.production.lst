

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 11 08:46:05 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 07/09/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1719 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0008                     bsr             equ	8
    48     0005                     fsr0h           equ	5
    49     0004                     fsr0l           equ	4
    50     0007                     fsr1h           equ	7
    51     0006                     fsr1l           equ	6
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0001                     indf1           equ	1
    55     000B                     intcon          equ	11
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0009                     wreg            equ	9
    61     0000                     INDF0           equ	0	;# 
    62     0001                     INDF1           equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR0L           equ	4	;# 
    66     0005                     FSR0H           equ	5	;# 
    67     0006                     FSR1L           equ	6	;# 
    68     0007                     FSR1H           equ	7	;# 
    69     0008                     BSR             equ	8	;# 
    70     0009                     WREG            equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PORTA           equ	12	;# 
    74     000D                     PORTB           equ	13	;# 
    75     000E                     PORTC           equ	14	;# 
    76     000F                     PORTD           equ	15	;# 
    77     0010                     PORTE           equ	16	;# 
    78     0011                     PIR1            equ	17	;# 
    79     0012                     PIR2            equ	18	;# 
    80     0013                     PIR3            equ	19	;# 
    81     0015                     TMR0            equ	21	;# 
    82     0016                     TMR1            equ	22	;# 
    83     0016                     TMR1L           equ	22	;# 
    84     0017                     TMR1H           equ	23	;# 
    85     0018                     T1CON           equ	24	;# 
    86     0019                     T1GCON          equ	25	;# 
    87     001A                     TMR2            equ	26	;# 
    88     001B                     PR2             equ	27	;# 
    89     001C                     T2CON           equ	28	;# 
    90     008C                     TRISA           equ	140	;# 
    91     008D                     TRISB           equ	141	;# 
    92     008E                     TRISC           equ	142	;# 
    93     008F                     TRISD           equ	143	;# 
    94     0090                     TRISE           equ	144	;# 
    95     0091                     PIE1            equ	145	;# 
    96     0092                     PIE2            equ	146	;# 
    97     0093                     PIE3            equ	147	;# 
    98     0095                     OPTION_REG      equ	149	;# 
    99     0096                     PCON            equ	150	;# 
   100     0097                     WDTCON          equ	151	;# 
   101     0098                     OSCTUNE         equ	152	;# 
   102     0099                     OSCCON          equ	153	;# 
   103     009A                     OSCSTAT         equ	154	;# 
   104     009B                     ADRES           equ	155	;# 
   105     009B                     ADRESL          equ	155	;# 
   106     009C                     ADRESH          equ	156	;# 
   107     009D                     ADCON0          equ	157	;# 
   108     009E                     ADCON1          equ	158	;# 
   109     009F                     ADCON2          equ	159	;# 
   110     010C                     LATA            equ	268	;# 
   111     010D                     LATB            equ	269	;# 
   112     010E                     LATC            equ	270	;# 
   113     010F                     LATD            equ	271	;# 
   114     0110                     LATE            equ	272	;# 
   115     0111                     CM1CON0         equ	273	;# 
   116     0112                     CM1CON1         equ	274	;# 
   117     0113                     CM2CON0         equ	275	;# 
   118     0114                     CM2CON1         equ	276	;# 
   119     0115                     CMOUT           equ	277	;# 
   120     0116                     BORCON          equ	278	;# 
   121     0117                     FVRCON          equ	279	;# 
   122     0118                     DAC1CON0        equ	280	;# 
   123     0119                     DAC1CON1        equ	281	;# 
   124     011A                     DAC2CON0        equ	282	;# 
   125     011B                     DAC2REF         equ	283	;# 
   126     011B                     DAC2CON1        equ	283	;# 
   127     011C                     ZCD1CON         equ	284	;# 
   128     018C                     ANSELA          equ	396	;# 
   129     018D                     ANSELB          equ	397	;# 
   130     018E                     ANSELC          equ	398	;# 
   131     018F                     ANSELD          equ	399	;# 
   132     0190                     ANSELE          equ	400	;# 
   133     0191                     PMADR           equ	401	;# 
   134     0191                     PMADRL          equ	401	;# 
   135     0192                     PMADRH          equ	402	;# 
   136     0193                     PMDAT           equ	403	;# 
   137     0193                     PMDATL          equ	403	;# 
   138     0194                     PMDATH          equ	404	;# 
   139     0195                     PMCON1          equ	405	;# 
   140     0196                     PMCON2          equ	406	;# 
   141     0197                     VREGCON         equ	407	;# 
   142     0199                     RC1REG          equ	409	;# 
   143     0199                     RCREG           equ	409	;# 
   144     0199                     RCREG1          equ	409	;# 
   145     019A                     TX1REG          equ	410	;# 
   146     019A                     TXREG1          equ	410	;# 
   147     019A                     TXREG           equ	410	;# 
   148     019B                     SP1BRG          equ	411	;# 
   149     019B                     SPBRG           equ	411	;# 
   150     019B                     SP1BRGL         equ	411	;# 
   151     019B                     SPBRG1          equ	411	;# 
   152     019B                     SPBRGL          equ	411	;# 
   153     019C                     SP1BRGH         equ	412	;# 
   154     019C                     SPBRGH          equ	412	;# 
   155     019C                     SPBRGH1         equ	412	;# 
   156     019D                     RC1STA          equ	413	;# 
   157     019D                     RCSTA1          equ	413	;# 
   158     019D                     RCSTA           equ	413	;# 
   159     019E                     TX1STA          equ	414	;# 
   160     019E                     TXSTA1          equ	414	;# 
   161     019E                     TXSTA           equ	414	;# 
   162     019F                     BAUD1CON        equ	415	;# 
   163     019F                     BAUDCON1        equ	415	;# 
   164     019F                     BAUDCTL1        equ	415	;# 
   165     019F                     BAUDCON         equ	415	;# 
   166     019F                     BAUDCTL         equ	415	;# 
   167     020C                     WPUA            equ	524	;# 
   168     020D                     WPUB            equ	525	;# 
   169     020E                     WPUC            equ	526	;# 
   170     020F                     WPUD            equ	527	;# 
   171     0210                     WPUE            equ	528	;# 
   172     0211                     SSP1BUF         equ	529	;# 
   173     0211                     SSPBUF          equ	529	;# 
   174     0212                     SSP1ADD         equ	530	;# 
   175     0212                     SSPADD          equ	530	;# 
   176     0213                     SSP1MSK         equ	531	;# 
   177     0213                     SSPMSK          equ	531	;# 
   178     0214                     SSP1STAT        equ	532	;# 
   179     0214                     SSPSTAT         equ	532	;# 
   180     0215                     SSP1CON1        equ	533	;# 
   181     0215                     SSPCON          equ	533	;# 
   182     0215                     SSPCON1         equ	533	;# 
   183     0215                     SSP1CON         equ	533	;# 
   184     0216                     SSP1CON2        equ	534	;# 
   185     0216                     SSPCON2         equ	534	;# 
   186     0217                     SSP1CON3        equ	535	;# 
   187     0217                     SSPCON3         equ	535	;# 
   188     028C                     ODCONA          equ	652	;# 
   189     028D                     ODCONB          equ	653	;# 
   190     028E                     ODCONC          equ	654	;# 
   191     028F                     ODCOND          equ	655	;# 
   192     0290                     ODCONE          equ	656	;# 
   193     0291                     CCPR1           equ	657	;# 
   194     0291                     CCPR1L          equ	657	;# 
   195     0292                     CCPR1H          equ	658	;# 
   196     0293                     CCP1CON         equ	659	;# 
   197     0293                     ECCP1CON        equ	659	;# 
   198     0298                     CCPR2           equ	664	;# 
   199     0298                     CCPR2L          equ	664	;# 
   200     0299                     CCPR2H          equ	665	;# 
   201     029A                     CCP2CON         equ	666	;# 
   202     029A                     ECCP2CON        equ	666	;# 
   203     029E                     CCPTMRS         equ	670	;# 
   204     030C                     SLRCONA         equ	780	;# 
   205     030D                     SLRCONB         equ	781	;# 
   206     030E                     SLRCONC         equ	782	;# 
   207     030F                     SLRCOND         equ	783	;# 
   208     0310                     SLRCONE         equ	784	;# 
   209     038C                     INLVLA          equ	908	;# 
   210     038D                     INLVLB          equ	909	;# 
   211     038E                     INLVLC          equ	910	;# 
   212     038F                     INLVLD          equ	911	;# 
   213     0390                     INLVLE          equ	912	;# 
   214     0391                     IOCAP           equ	913	;# 
   215     0392                     IOCAN           equ	914	;# 
   216     0393                     IOCAF           equ	915	;# 
   217     0394                     IOCBP           equ	916	;# 
   218     0395                     IOCBN           equ	917	;# 
   219     0396                     IOCBF           equ	918	;# 
   220     0397                     IOCCP           equ	919	;# 
   221     0398                     IOCCN           equ	920	;# 
   222     0399                     IOCCF           equ	921	;# 
   223     039D                     IOCEP           equ	925	;# 
   224     039E                     IOCEN           equ	926	;# 
   225     039F                     IOCEF           equ	927	;# 
   226     0415                     TMR4            equ	1045	;# 
   227     0416                     PR4             equ	1046	;# 
   228     0417                     T4CON           equ	1047	;# 
   229     041C                     TMR6            equ	1052	;# 
   230     041D                     PR6             equ	1053	;# 
   231     041E                     T6CON           equ	1054	;# 
   232     0498                     NCO1ACC         equ	1176	;# 
   233     0498                     NCO1ACCL        equ	1176	;# 
   234     0499                     NCO1ACCH        equ	1177	;# 
   235     049A                     NCO1ACCU        equ	1178	;# 
   236     049B                     NCO1INC         equ	1179	;# 
   237     049B                     NCO1INCL        equ	1179	;# 
   238     049C                     NCO1INCH        equ	1180	;# 
   239     049D                     NCO1INCU        equ	1181	;# 
   240     049E                     NCO1CON         equ	1182	;# 
   241     049F                     NCO1CLK         equ	1183	;# 
   242     0511                     OPA1CON         equ	1297	;# 
   243     0515                     OPA2CON         equ	1301	;# 
   244     0617                     PWM3DCL         equ	1559	;# 
   245     0618                     PWM3DCH         equ	1560	;# 
   246     0619                     PWM3CON         equ	1561	;# 
   247     0619                     PWM3CON0        equ	1561	;# 
   248     061A                     PWM4DCL         equ	1562	;# 
   249     061B                     PWM4DCH         equ	1563	;# 
   250     061C                     PWM4CON         equ	1564	;# 
   251     061C                     PWM4CON0        equ	1564	;# 
   252     0691                     COG1PHR         equ	1681	;# 
   253     0692                     COG1PHF         equ	1682	;# 
   254     0693                     COG1BLKR        equ	1683	;# 
   255     0694                     COG1BLKF        equ	1684	;# 
   256     0695                     COG1DBR         equ	1685	;# 
   257     0696                     COG1DBF         equ	1686	;# 
   258     0697                     COG1CON0        equ	1687	;# 
   259     0698                     COG1CON1        equ	1688	;# 
   260     0699                     COG1RIS         equ	1689	;# 
   261     069A                     COG1RSIM        equ	1690	;# 
   262     069B                     COG1FIS         equ	1691	;# 
   263     069C                     COG1FSIM        equ	1692	;# 
   264     069D                     COG1ASD0        equ	1693	;# 
   265     069E                     COG1ASD1        equ	1694	;# 
   266     069F                     COG1STR         equ	1695	;# 
   267     0E0F                     PPSLOCK         equ	3599	;# 
   268     0E10                     INTPPS          equ	3600	;# 
   269     0E11                     T0CKIPPS        equ	3601	;# 
   270     0E12                     T1CKIPPS        equ	3602	;# 
   271     0E13                     T1GPPS          equ	3603	;# 
   272     0E14                     CCP1PPS         equ	3604	;# 
   273     0E15                     CCP2PPS         equ	3605	;# 
   274     0E17                     COGINPPS        equ	3607	;# 
   275     0E20                     SSPCLKPPS       equ	3616	;# 
   276     0E21                     SSPDATPPS       equ	3617	;# 
   277     0E22                     SSPSSPPS        equ	3618	;# 
   278     0E24                     RXPPS           equ	3620	;# 
   279     0E25                     CKPPS           equ	3621	;# 
   280     0E28                     CLCIN0PPS       equ	3624	;# 
   281     0E29                     CLCIN1PPS       equ	3625	;# 
   282     0E2A                     CLCIN2PPS       equ	3626	;# 
   283     0E2B                     CLCIN3PPS       equ	3627	;# 
   284     0E90                     RA0PPS          equ	3728	;# 
   285     0E91                     RA1PPS          equ	3729	;# 
   286     0E92                     RA2PPS          equ	3730	;# 
   287     0E93                     RA3PPS          equ	3731	;# 
   288     0E94                     RA4PPS          equ	3732	;# 
   289     0E95                     RA5PPS          equ	3733	;# 
   290     0E96                     RA6PPS          equ	3734	;# 
   291     0E97                     RA7PPS          equ	3735	;# 
   292     0E98                     RB0PPS          equ	3736	;# 
   293     0E99                     RB1PPS          equ	3737	;# 
   294     0E9A                     RB2PPS          equ	3738	;# 
   295     0E9B                     RB3PPS          equ	3739	;# 
   296     0E9C                     RB4PPS          equ	3740	;# 
   297     0E9D                     RB5PPS          equ	3741	;# 
   298     0E9E                     RB6PPS          equ	3742	;# 
   299     0E9F                     RB7PPS          equ	3743	;# 
   300     0EA0                     RC0PPS          equ	3744	;# 
   301     0EA1                     RC1PPS          equ	3745	;# 
   302     0EA2                     RC2PPS          equ	3746	;# 
   303     0EA3                     RC3PPS          equ	3747	;# 
   304     0EA4                     RC4PPS          equ	3748	;# 
   305     0EA5                     RC5PPS          equ	3749	;# 
   306     0EA6                     RC6PPS          equ	3750	;# 
   307     0EA7                     RC7PPS          equ	3751	;# 
   308     0EA8                     RD0PPS          equ	3752	;# 
   309     0EA9                     RD1PPS          equ	3753	;# 
   310     0EAA                     RD2PPS          equ	3754	;# 
   311     0EAB                     RD3PPS          equ	3755	;# 
   312     0EAC                     RD4PPS          equ	3756	;# 
   313     0EAD                     RD5PPS          equ	3757	;# 
   314     0EAE                     RD6PPS          equ	3758	;# 
   315     0EAF                     RD7PPS          equ	3759	;# 
   316     0EB0                     RE0PPS          equ	3760	;# 
   317     0EB1                     RE1PPS          equ	3761	;# 
   318     0EB2                     RE2PPS          equ	3762	;# 
   319     0F0F                     CLCDATA         equ	3855	;# 
   320     0F10                     CLC1CON         equ	3856	;# 
   321     0F11                     CLC1POL         equ	3857	;# 
   322     0F12                     CLC1SEL0        equ	3858	;# 
   323     0F13                     CLC1SEL1        equ	3859	;# 
   324     0F14                     CLC1SEL2        equ	3860	;# 
   325     0F15                     CLC1SEL3        equ	3861	;# 
   326     0F16                     CLC1GLS0        equ	3862	;# 
   327     0F17                     CLC1GLS1        equ	3863	;# 
   328     0F18                     CLC1GLS2        equ	3864	;# 
   329     0F19                     CLC1GLS3        equ	3865	;# 
   330     0F1A                     CLC2CON         equ	3866	;# 
   331     0F1B                     CLC2POL         equ	3867	;# 
   332     0F1C                     CLC2SEL0        equ	3868	;# 
   333     0F1D                     CLC2SEL1        equ	3869	;# 
   334     0F1E                     CLC2SEL2        equ	3870	;# 
   335     0F1F                     CLC2SEL3        equ	3871	;# 
   336     0F20                     CLC2GLS0        equ	3872	;# 
   337     0F21                     CLC2GLS1        equ	3873	;# 
   338     0F22                     CLC2GLS2        equ	3874	;# 
   339     0F23                     CLC2GLS3        equ	3875	;# 
   340     0F24                     CLC3CON         equ	3876	;# 
   341     0F25                     CLC3POL         equ	3877	;# 
   342     0F26                     CLC3SEL0        equ	3878	;# 
   343     0F27                     CLC3SEL1        equ	3879	;# 
   344     0F28                     CLC3SEL2        equ	3880	;# 
   345     0F29                     CLC3SEL3        equ	3881	;# 
   346     0F2A                     CLC3GLS0        equ	3882	;# 
   347     0F2B                     CLC3GLS1        equ	3883	;# 
   348     0F2C                     CLC3GLS2        equ	3884	;# 
   349     0F2D                     CLC3GLS3        equ	3885	;# 
   350     0F2E                     CLC4CON         equ	3886	;# 
   351     0F2F                     CLC4POL         equ	3887	;# 
   352     0F30                     CLC4SEL0        equ	3888	;# 
   353     0F31                     CLC4SEL1        equ	3889	;# 
   354     0F32                     CLC4SEL2        equ	3890	;# 
   355     0F33                     CLC4SEL3        equ	3891	;# 
   356     0F34                     CLC4GLS0        equ	3892	;# 
   357     0F35                     CLC4GLS1        equ	3893	;# 
   358     0F36                     CLC4GLS2        equ	3894	;# 
   359     0F37                     CLC4GLS3        equ	3895	;# 
   360     0FE4                     STATUS_SHAD     equ	4068	;# 
   361     0FE5                     WREG_SHAD       equ	4069	;# 
   362     0FE6                     BSR_SHAD        equ	4070	;# 
   363     0FE7                     PCLATH_SHAD     equ	4071	;# 
   364     0FE8                     FSR0L_SHAD      equ	4072	;# 
   365     0FE9                     FSR0H_SHAD      equ	4073	;# 
   366     0FEA                     FSR1L_SHAD      equ	4074	;# 
   367     0FEB                     FSR1H_SHAD      equ	4075	;# 
   368     0FED                     STKPTR          equ	4077	;# 
   369     0FEE                     TOSL            equ	4078	;# 
   370     0FEF                     TOSH            equ	4079	;# 
   371     008C                     _TRISA          set	140
   372     008D                     _TRISB          set	141
   373     008F                     _TRISD          set	143
   374     009B                     _ADRESL         set	155
   375     009C                     _ADRESH         set	156
   376     009D                     _ADCON0bits     set	157
   377     009D                     _ADCON0         set	157
   378     009E                     _ADCON1         set	158
   379     010D                     _LATB           set	269
   380     010F                     _LATD           set	271
   381     018C                     _ANSELA         set	396
   382                           
   383                           	psect	cinit
   384     07FD                     start_initialization:	
   385                           ; #config settings
   386                           
   387     07FD                     __initialization:
   388     07FD                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391     07FD                     __end_of__initialization:
   392     07FD  0020               	movlb	0
   393     07FE  3187  2FBF         	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	cstackCOMMON
   396     0070                     __pcstackCOMMON:
   397     0070                     ?_init_ADC:
   398     0070                     ?_init_ports:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_update_LEDs:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_main:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_read_ADC:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ??_init_ADC:	
   411                           ; 2 bytes @ 0x0
   412                           
   413     0070                     ??_init_ports:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418     0070                     	ds	2
   419     0072                     ??_read_ADC:
   420     0072                     ??_update_LEDs:	
   421                           ; 1 bytes @ 0x2
   422                           
   423                           
   424                           ; 1 bytes @ 0x2
   425     0072                     	ds	2
   426     0074                     update_LEDs@adc_value:
   427                           
   428                           ; 2 bytes @ 0x4
   429     0074                     	ds	2
   430     0076                     update_LEDs@led_index:
   431                           
   432                           ; 1 bytes @ 0x6
   433     0076                     	ds	1
   434     0077                     ??_main:
   435                           
   436                           	psect	maintext
   437     07BF                     __pmaintext:	
   438                           ; 1 bytes @ 0x7
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 43 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : B1F/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels required when called: 2
   464 ;; This function calls:
   465 ;;		_init_ADC
   466 ;;		_init_ports
   467 ;;		_update_LEDs
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     07BF                     _main:	
   474                           ;psect for function _main
   475                           
   476     07BF                     l625:	
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   479                           
   480                           
   481                           ;main.c: 44:     init_ports();
   482     07BF  3187  27AB  3187   	fcall	_init_ports
   483                           
   484                           ;main.c: 45:     init_ADC();
   485     07C2  3187  27A5  3187   	fcall	_init_ADC
   486     07C5                     l627:
   487                           
   488                           ;main.c: 48:         update_LEDs();
   489     07C5  3187  27CB  3187   	fcall	_update_LEDs
   490     07C8  2FC5               	goto	l627
   491     07C9  3180  2802         	ljmp	start
   492     07CB                     __end_of_main:
   493                           
   494                           	psect	text1
   495     07CB                     __ptext1:	
   496 ;; *************** function _update_LEDs *****************
   497 ;; Defined at:
   498 ;;		line 27 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  adc_value       2    4[COMMON] unsigned int 
   503 ;;  led_index       1    6[COMMON] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   516 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   517 ;;Total ram usage:        5 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 1
   520 ;; This function calls:
   521 ;;		_read_ADC
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     07CB                     _update_LEDs:	
   528                           ;psect for function _update_LEDs
   529                           
   530     07CB                     l611:	
   531                           ;incstack = 0
   532                           ; Regs used in _update_LEDs: [wreg+status,2+status,0+pclath+cstack]
   533                           
   534                           
   535                           ;main.c: 28:     unsigned int adc_value = read_ADC();
   536     07CB  3187  27B4  3187   	fcall	_read_ADC
   537     07CE  0871               	movf	?_read_ADC+1,w
   538     07CF  00F5               	movwf	update_LEDs@adc_value+1
   539     07D0  0870               	movf	?_read_ADC,w
   540     07D1  00F4               	movwf	update_LEDs@adc_value
   541     07D2                     l613:
   542                           
   543                           ;main.c: 29:     unsigned char led_index = (adc_value * 8) / 1024;
   544     07D2  0875               	movf	update_LEDs@adc_value+1,w
   545     07D3  00F3               	movwf	??_update_LEDs+1
   546     07D4  0874               	movf	update_LEDs@adc_value,w
   547     07D5  00F2               	movwf	??_update_LEDs
   548     07D6  3007               	movlw	7
   549     07D7                     u75:
   550     07D7  36F3               	lsrf	??_update_LEDs+1,f
   551     07D8  0CF2               	rrf	??_update_LEDs,f
   552     07D9  0B89               	decfsz	9,f
   553     07DA  2FD7               	goto	u75
   554     07DB  0872               	movf	??_update_LEDs,w
   555     07DC  393F               	andlw	63
   556     07DD  00F6               	movwf	update_LEDs@led_index
   557     07DE                     l615:
   558                           
   559                           ;main.c: 31:     LATD = 0x00;
   560     07DE  0022               	movlb	2	; select bank2
   561     07DF  018F               	clrf	15	;volatile
   562     07E0                     l617:
   563                           
   564                           ;main.c: 32:     LATB = 0x00;
   565     07E0  018D               	clrf	13	;volatile
   566     07E1                     l619:
   567                           
   568                           ;main.c: 35:     if (led_index < 4) {
   569     07E1  3004               	movlw	4
   570     07E2  0276               	subwf	update_LEDs@led_index,w
   571     07E3  1803               	skipnc
   572     07E4  2FE6               	goto	u81
   573     07E5  2FE7               	goto	u80
   574     07E6                     u81:
   575     07E6  2FF1               	goto	l623
   576     07E7                     u80:
   577     07E7                     l621:
   578                           
   579                           ;main.c: 36:         LATD = (1 << led_index);
   580     07E7  3001               	movlw	1
   581     07E8  00F2               	movwf	??_update_LEDs
   582     07E9  0A76               	incf	update_LEDs@led_index,w
   583     07EA  2FEC               	goto	u94
   584     07EB                     u95:
   585     07EB  35F2               	lslf	??_update_LEDs,f
   586     07EC                     u94:
   587     07EC  0B89               	decfsz	9,f
   588     07ED  2FEB               	goto	u95
   589     07EE  0872               	movf	??_update_LEDs,w
   590     07EF  008F               	movwf	15	;volatile
   591                           
   592                           ;main.c: 37:     } else {
   593     07F0  2FFC               	goto	l39
   594     07F1                     l623:
   595                           
   596                           ;main.c: 38:         LATB = (1 << (led_index - 4));
   597     07F1  3001               	movlw	1
   598     07F2  00F2               	movwf	??_update_LEDs
   599     07F3  0876               	movf	update_LEDs@led_index,w
   600     07F4  3EFC               	addlw	-4
   601     07F5  0A89               	incf	9,f
   602     07F6  2FF8               	goto	u104
   603     07F7                     u105:
   604     07F7  35F2               	lslf	??_update_LEDs,f
   605     07F8                     u104:
   606     07F8  0B89               	decfsz	9,f
   607     07F9  2FF7               	goto	u105
   608     07FA  0872               	movf	??_update_LEDs,w
   609     07FB  008D               	movwf	13	;volatile
   610     07FC                     l39:
   611     07FC  0008               	return
   612     07FD                     __end_of_update_LEDs:
   613                           
   614                           	psect	text2
   615     07B4                     __ptext2:	
   616 ;; *************** function _read_ADC *****************
   617 ;; Defined at:
   618 ;;		line 12 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  2    0[COMMON] unsigned int 
   625 ;; Registers used:
   626 ;;		wreg
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        2 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_update_LEDs
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645     07B4                     _read_ADC:	
   646                           ;psect for function _read_ADC
   647                           
   648     07B4                     l605:	
   649                           ;incstack = 0
   650                           ; Regs used in _read_ADC: [wreg]
   651                           
   652                           
   653                           ;main.c: 13:     ADCON0bits.GO = 1;
   654     07B4  0021               	movlb	1	; select bank1
   655     07B5  149D               	bsf	29,1	;volatile
   656     07B6                     l28:	
   657                           ;main.c: 14:     while (ADCON0bits.GO);
   658                           
   659     07B6  189D               	btfsc	29,1	;volatile
   660     07B7  2FB9               	goto	u61
   661     07B8  2FBA               	goto	u60
   662     07B9                     u61:
   663     07B9  2FB6               	goto	l28
   664     07BA                     u60:
   665     07BA                     l607:
   666                           
   667                           ;main.c: 15:     return ((ADRESH << 8) + ADRESL);
   668     07BA  081C               	movf	28,w	;volatile
   669     07BB  00F1               	movwf	?_read_ADC+1
   670     07BC  081B               	movf	27,w	;volatile
   671     07BD  00F0               	movwf	?_read_ADC
   672     07BE                     l31:
   673     07BE  0008               	return
   674     07BF                     __end_of_read_ADC:
   675                           
   676                           	psect	text3
   677     07AB                     __ptext3:	
   678 ;; *************** function _init_ports *****************
   679 ;; Defined at:
   680 ;;		line 19 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     07AB                     _init_ports:	
   708                           ;psect for function _init_ports
   709                           
   710     07AB                     l581:	
   711                           ;incstack = 0
   712                           ; Regs used in _init_ports: [status,2]
   713                           
   714                           
   715                           ;main.c: 20:     TRISD = 0x00;
   716     07AB  0021               	movlb	1	; select bank1
   717     07AC  018F               	clrf	15	;volatile
   718                           
   719                           ;main.c: 21:     TRISB = 0x00;
   720     07AD  018D               	clrf	13	;volatile
   721     07AE                     l583:
   722                           
   723                           ;main.c: 22:     TRISA = 0xFF;
   724     07AE  30FF               	movlw	255
   725     07AF  008C               	movwf	12	;volatile
   726     07B0                     l585:
   727                           
   728                           ;main.c: 23:     ANSELA = 0xFF;
   729     07B0  30FF               	movlw	255
   730     07B1  0023               	movlb	3	; select bank3
   731     07B2  008C               	movwf	12	;volatile
   732     07B3                     l34:
   733     07B3  0008               	return
   734     07B4                     __end_of_init_ports:
   735                           
   736                           	psect	text4
   737     07A5                     __ptext4:	
   738 ;; *************** function _init_ADC *****************
   739 ;; Defined at:
   740 ;;		line 6 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		None
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     07A5                     _init_ADC:	
   768                           ;psect for function _init_ADC
   769                           
   770     07A5                     l579:	
   771                           ;incstack = 0
   772                           ; Regs used in _init_ADC: []
   773                           
   774                           
   775                           ;main.c: 7:     ADCON1 = 0x80;
   776     07A5  3080               	movlw	128
   777     07A6  0021               	movlb	1	; select bank1
   778     07A7  009E               	movwf	30	;volatile
   779                           
   780                           ;main.c: 8:     ADCON0 = 0x01;
   781     07A8  3001               	movlw	1
   782     07A9  009D               	movwf	29	;volatile
   783     07AA                     l25:
   784     07AA  0008               	return
   785     07AB                     __end_of_init_ADC:
   786     0003                     ___latbits      equ	3
   787     007E                     btemp           set	126	;btemp
   788     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_update_LEDs
    _update_LEDs->_read_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                           _init_ADC
                         _init_ports
                        _update_LEDs
 ---------------------------------------------------------------------------------
 (1) _update_LEDs                                          5     5      0      90
                                              2 COMMON     5     5      0
                           _read_ADC
 ---------------------------------------------------------------------------------
 (2) _read_ADC                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ADC
   _init_ports
   _update_LEDs
     _read_ADC

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 11 08:46:05 2025

                     l31 07BE                       l25 07AA                       l34 07B3  
                     l28 07B6                       l39 07FC                       u60 07BA  
                     u61 07B9                       u80 07E7                       u81 07E6  
                     u75 07D7                       u94 07EC                       u95 07EB  
   update_LEDs@led_index 0076                      l611 07CB                      l605 07B4  
                    l621 07E7                      l613 07D2                      l607 07BA  
                    l623 07F1                      l615 07DE                      l617 07E0  
                    l625 07BF                      l619 07E1                      l627 07C5  
                    l581 07AB                      l583 07AE                      l585 07B0  
                    l579 07A5                      u104 07F8                      u105 07F7  
                    wreg 0009                     _LATB 010D                     _LATD 010F  
                   _main 07BF                     btemp 007E                     start 0002  
                  ?_main 0070                    _TRISA 008C                    _TRISB 008D  
                  _TRISD 008F                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07CB                   ??_main 0077                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C         __end_of_init_ADC 07AB         __end_of_read_ADC 07BF  
__end_of__initialization 07FD             ?_update_LEDs 0070           __pcstackCOMMON 0070  
             __pmaintext 07BF                ?_init_ADC 0070                ?_read_ADC 0070  
             _init_ports 07AB                  __ptext1 07CB                  __ptext2 07B4  
                __ptext3 07AB                  __ptext4 07A5     end_of_initialization 07FD  
             ??_init_ADC 0070               ??_read_ADC 0072              ?_init_ports 0070  
    start_initialization 07FD                ___latbits 0003               _ADCON0bits 009D  
          ??_update_LEDs 0072             ??_init_ports 0070                 _init_ADC 07A5  
               _read_ADC 07B4       __end_of_init_ports 07B4      __end_of_update_LEDs 07FD  
   update_LEDs@adc_value 0074              _update_LEDs 07CB  
