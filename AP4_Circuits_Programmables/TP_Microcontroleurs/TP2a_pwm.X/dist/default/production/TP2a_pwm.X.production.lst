

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 11 08:46:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 07/09/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1719 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0008                     bsr             equ	8
    51     0005                     fsr0h           equ	5
    52     0004                     fsr0l           equ	4
    53     0007                     fsr1h           equ	7
    54     0006                     fsr1l           equ	6
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0001                     indf1           equ	1
    58     000B                     intcon          equ	11
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0009                     wreg            equ	9
    64     0000                     INDF0           equ	0	;# 
    65     0001                     INDF1           equ	1	;# 
    66     0002                     PCL             equ	2	;# 
    67     0003                     STATUS          equ	3	;# 
    68     0004                     FSR0L           equ	4	;# 
    69     0005                     FSR0H           equ	5	;# 
    70     0006                     FSR1L           equ	6	;# 
    71     0007                     FSR1H           equ	7	;# 
    72     0008                     BSR             equ	8	;# 
    73     0009                     WREG            equ	9	;# 
    74     000A                     PCLATH          equ	10	;# 
    75     000B                     INTCON          equ	11	;# 
    76     000C                     PORTA           equ	12	;# 
    77     000D                     PORTB           equ	13	;# 
    78     000E                     PORTC           equ	14	;# 
    79     000F                     PORTD           equ	15	;# 
    80     0010                     PORTE           equ	16	;# 
    81     0011                     PIR1            equ	17	;# 
    82     0012                     PIR2            equ	18	;# 
    83     0013                     PIR3            equ	19	;# 
    84     0015                     TMR0            equ	21	;# 
    85     0016                     TMR1            equ	22	;# 
    86     0016                     TMR1L           equ	22	;# 
    87     0017                     TMR1H           equ	23	;# 
    88     0018                     T1CON           equ	24	;# 
    89     0019                     T1GCON          equ	25	;# 
    90     001A                     TMR2            equ	26	;# 
    91     001B                     PR2             equ	27	;# 
    92     001C                     T2CON           equ	28	;# 
    93     008C                     TRISA           equ	140	;# 
    94     008D                     TRISB           equ	141	;# 
    95     008E                     TRISC           equ	142	;# 
    96     008F                     TRISD           equ	143	;# 
    97     0090                     TRISE           equ	144	;# 
    98     0091                     PIE1            equ	145	;# 
    99     0092                     PIE2            equ	146	;# 
   100     0093                     PIE3            equ	147	;# 
   101     0095                     OPTION_REG      equ	149	;# 
   102     0096                     PCON            equ	150	;# 
   103     0097                     WDTCON          equ	151	;# 
   104     0098                     OSCTUNE         equ	152	;# 
   105     0099                     OSCCON          equ	153	;# 
   106     009A                     OSCSTAT         equ	154	;# 
   107     009B                     ADRES           equ	155	;# 
   108     009B                     ADRESL          equ	155	;# 
   109     009C                     ADRESH          equ	156	;# 
   110     009D                     ADCON0          equ	157	;# 
   111     009E                     ADCON1          equ	158	;# 
   112     009F                     ADCON2          equ	159	;# 
   113     010C                     LATA            equ	268	;# 
   114     010D                     LATB            equ	269	;# 
   115     010E                     LATC            equ	270	;# 
   116     010F                     LATD            equ	271	;# 
   117     0110                     LATE            equ	272	;# 
   118     0111                     CM1CON0         equ	273	;# 
   119     0112                     CM1CON1         equ	274	;# 
   120     0113                     CM2CON0         equ	275	;# 
   121     0114                     CM2CON1         equ	276	;# 
   122     0115                     CMOUT           equ	277	;# 
   123     0116                     BORCON          equ	278	;# 
   124     0117                     FVRCON          equ	279	;# 
   125     0118                     DAC1CON0        equ	280	;# 
   126     0119                     DAC1CON1        equ	281	;# 
   127     011A                     DAC2CON0        equ	282	;# 
   128     011B                     DAC2REF         equ	283	;# 
   129     011B                     DAC2CON1        equ	283	;# 
   130     011C                     ZCD1CON         equ	284	;# 
   131     018C                     ANSELA          equ	396	;# 
   132     018D                     ANSELB          equ	397	;# 
   133     018E                     ANSELC          equ	398	;# 
   134     018F                     ANSELD          equ	399	;# 
   135     0190                     ANSELE          equ	400	;# 
   136     0191                     PMADR           equ	401	;# 
   137     0191                     PMADRL          equ	401	;# 
   138     0192                     PMADRH          equ	402	;# 
   139     0193                     PMDAT           equ	403	;# 
   140     0193                     PMDATL          equ	403	;# 
   141     0194                     PMDATH          equ	404	;# 
   142     0195                     PMCON1          equ	405	;# 
   143     0196                     PMCON2          equ	406	;# 
   144     0197                     VREGCON         equ	407	;# 
   145     0199                     RC1REG          equ	409	;# 
   146     0199                     RCREG           equ	409	;# 
   147     0199                     RCREG1          equ	409	;# 
   148     019A                     TX1REG          equ	410	;# 
   149     019A                     TXREG1          equ	410	;# 
   150     019A                     TXREG           equ	410	;# 
   151     019B                     SP1BRG          equ	411	;# 
   152     019B                     SPBRG           equ	411	;# 
   153     019B                     SP1BRGL         equ	411	;# 
   154     019B                     SPBRG1          equ	411	;# 
   155     019B                     SPBRGL          equ	411	;# 
   156     019C                     SP1BRGH         equ	412	;# 
   157     019C                     SPBRGH          equ	412	;# 
   158     019C                     SPBRGH1         equ	412	;# 
   159     019D                     RC1STA          equ	413	;# 
   160     019D                     RCSTA1          equ	413	;# 
   161     019D                     RCSTA           equ	413	;# 
   162     019E                     TX1STA          equ	414	;# 
   163     019E                     TXSTA1          equ	414	;# 
   164     019E                     TXSTA           equ	414	;# 
   165     019F                     BAUD1CON        equ	415	;# 
   166     019F                     BAUDCON1        equ	415	;# 
   167     019F                     BAUDCTL1        equ	415	;# 
   168     019F                     BAUDCON         equ	415	;# 
   169     019F                     BAUDCTL         equ	415	;# 
   170     020C                     WPUA            equ	524	;# 
   171     020D                     WPUB            equ	525	;# 
   172     020E                     WPUC            equ	526	;# 
   173     020F                     WPUD            equ	527	;# 
   174     0210                     WPUE            equ	528	;# 
   175     0211                     SSP1BUF         equ	529	;# 
   176     0211                     SSPBUF          equ	529	;# 
   177     0212                     SSP1ADD         equ	530	;# 
   178     0212                     SSPADD          equ	530	;# 
   179     0213                     SSP1MSK         equ	531	;# 
   180     0213                     SSPMSK          equ	531	;# 
   181     0214                     SSP1STAT        equ	532	;# 
   182     0214                     SSPSTAT         equ	532	;# 
   183     0215                     SSP1CON1        equ	533	;# 
   184     0215                     SSPCON          equ	533	;# 
   185     0215                     SSPCON1         equ	533	;# 
   186     0215                     SSP1CON         equ	533	;# 
   187     0216                     SSP1CON2        equ	534	;# 
   188     0216                     SSPCON2         equ	534	;# 
   189     0217                     SSP1CON3        equ	535	;# 
   190     0217                     SSPCON3         equ	535	;# 
   191     028C                     ODCONA          equ	652	;# 
   192     028D                     ODCONB          equ	653	;# 
   193     028E                     ODCONC          equ	654	;# 
   194     028F                     ODCOND          equ	655	;# 
   195     0290                     ODCONE          equ	656	;# 
   196     0291                     CCPR1           equ	657	;# 
   197     0291                     CCPR1L          equ	657	;# 
   198     0292                     CCPR1H          equ	658	;# 
   199     0293                     CCP1CON         equ	659	;# 
   200     0293                     ECCP1CON        equ	659	;# 
   201     0298                     CCPR2           equ	664	;# 
   202     0298                     CCPR2L          equ	664	;# 
   203     0299                     CCPR2H          equ	665	;# 
   204     029A                     CCP2CON         equ	666	;# 
   205     029A                     ECCP2CON        equ	666	;# 
   206     029E                     CCPTMRS         equ	670	;# 
   207     030C                     SLRCONA         equ	780	;# 
   208     030D                     SLRCONB         equ	781	;# 
   209     030E                     SLRCONC         equ	782	;# 
   210     030F                     SLRCOND         equ	783	;# 
   211     0310                     SLRCONE         equ	784	;# 
   212     038C                     INLVLA          equ	908	;# 
   213     038D                     INLVLB          equ	909	;# 
   214     038E                     INLVLC          equ	910	;# 
   215     038F                     INLVLD          equ	911	;# 
   216     0390                     INLVLE          equ	912	;# 
   217     0391                     IOCAP           equ	913	;# 
   218     0392                     IOCAN           equ	914	;# 
   219     0393                     IOCAF           equ	915	;# 
   220     0394                     IOCBP           equ	916	;# 
   221     0395                     IOCBN           equ	917	;# 
   222     0396                     IOCBF           equ	918	;# 
   223     0397                     IOCCP           equ	919	;# 
   224     0398                     IOCCN           equ	920	;# 
   225     0399                     IOCCF           equ	921	;# 
   226     039D                     IOCEP           equ	925	;# 
   227     039E                     IOCEN           equ	926	;# 
   228     039F                     IOCEF           equ	927	;# 
   229     0415                     TMR4            equ	1045	;# 
   230     0416                     PR4             equ	1046	;# 
   231     0417                     T4CON           equ	1047	;# 
   232     041C                     TMR6            equ	1052	;# 
   233     041D                     PR6             equ	1053	;# 
   234     041E                     T6CON           equ	1054	;# 
   235     0498                     NCO1ACC         equ	1176	;# 
   236     0498                     NCO1ACCL        equ	1176	;# 
   237     0499                     NCO1ACCH        equ	1177	;# 
   238     049A                     NCO1ACCU        equ	1178	;# 
   239     049B                     NCO1INC         equ	1179	;# 
   240     049B                     NCO1INCL        equ	1179	;# 
   241     049C                     NCO1INCH        equ	1180	;# 
   242     049D                     NCO1INCU        equ	1181	;# 
   243     049E                     NCO1CON         equ	1182	;# 
   244     049F                     NCO1CLK         equ	1183	;# 
   245     0511                     OPA1CON         equ	1297	;# 
   246     0515                     OPA2CON         equ	1301	;# 
   247     0617                     PWM3DCL         equ	1559	;# 
   248     0618                     PWM3DCH         equ	1560	;# 
   249     0619                     PWM3CON         equ	1561	;# 
   250     0619                     PWM3CON0        equ	1561	;# 
   251     061A                     PWM4DCL         equ	1562	;# 
   252     061B                     PWM4DCH         equ	1563	;# 
   253     061C                     PWM4CON         equ	1564	;# 
   254     061C                     PWM4CON0        equ	1564	;# 
   255     0691                     COG1PHR         equ	1681	;# 
   256     0692                     COG1PHF         equ	1682	;# 
   257     0693                     COG1BLKR        equ	1683	;# 
   258     0694                     COG1BLKF        equ	1684	;# 
   259     0695                     COG1DBR         equ	1685	;# 
   260     0696                     COG1DBF         equ	1686	;# 
   261     0697                     COG1CON0        equ	1687	;# 
   262     0698                     COG1CON1        equ	1688	;# 
   263     0699                     COG1RIS         equ	1689	;# 
   264     069A                     COG1RSIM        equ	1690	;# 
   265     069B                     COG1FIS         equ	1691	;# 
   266     069C                     COG1FSIM        equ	1692	;# 
   267     069D                     COG1ASD0        equ	1693	;# 
   268     069E                     COG1ASD1        equ	1694	;# 
   269     069F                     COG1STR         equ	1695	;# 
   270     0E0F                     PPSLOCK         equ	3599	;# 
   271     0E10                     INTPPS          equ	3600	;# 
   272     0E11                     T0CKIPPS        equ	3601	;# 
   273     0E12                     T1CKIPPS        equ	3602	;# 
   274     0E13                     T1GPPS          equ	3603	;# 
   275     0E14                     CCP1PPS         equ	3604	;# 
   276     0E15                     CCP2PPS         equ	3605	;# 
   277     0E17                     COGINPPS        equ	3607	;# 
   278     0E20                     SSPCLKPPS       equ	3616	;# 
   279     0E21                     SSPDATPPS       equ	3617	;# 
   280     0E22                     SSPSSPPS        equ	3618	;# 
   281     0E24                     RXPPS           equ	3620	;# 
   282     0E25                     CKPPS           equ	3621	;# 
   283     0E28                     CLCIN0PPS       equ	3624	;# 
   284     0E29                     CLCIN1PPS       equ	3625	;# 
   285     0E2A                     CLCIN2PPS       equ	3626	;# 
   286     0E2B                     CLCIN3PPS       equ	3627	;# 
   287     0E90                     RA0PPS          equ	3728	;# 
   288     0E91                     RA1PPS          equ	3729	;# 
   289     0E92                     RA2PPS          equ	3730	;# 
   290     0E93                     RA3PPS          equ	3731	;# 
   291     0E94                     RA4PPS          equ	3732	;# 
   292     0E95                     RA5PPS          equ	3733	;# 
   293     0E96                     RA6PPS          equ	3734	;# 
   294     0E97                     RA7PPS          equ	3735	;# 
   295     0E98                     RB0PPS          equ	3736	;# 
   296     0E99                     RB1PPS          equ	3737	;# 
   297     0E9A                     RB2PPS          equ	3738	;# 
   298     0E9B                     RB3PPS          equ	3739	;# 
   299     0E9C                     RB4PPS          equ	3740	;# 
   300     0E9D                     RB5PPS          equ	3741	;# 
   301     0E9E                     RB6PPS          equ	3742	;# 
   302     0E9F                     RB7PPS          equ	3743	;# 
   303     0EA0                     RC0PPS          equ	3744	;# 
   304     0EA1                     RC1PPS          equ	3745	;# 
   305     0EA2                     RC2PPS          equ	3746	;# 
   306     0EA3                     RC3PPS          equ	3747	;# 
   307     0EA4                     RC4PPS          equ	3748	;# 
   308     0EA5                     RC5PPS          equ	3749	;# 
   309     0EA6                     RC6PPS          equ	3750	;# 
   310     0EA7                     RC7PPS          equ	3751	;# 
   311     0EA8                     RD0PPS          equ	3752	;# 
   312     0EA9                     RD1PPS          equ	3753	;# 
   313     0EAA                     RD2PPS          equ	3754	;# 
   314     0EAB                     RD3PPS          equ	3755	;# 
   315     0EAC                     RD4PPS          equ	3756	;# 
   316     0EAD                     RD5PPS          equ	3757	;# 
   317     0EAE                     RD6PPS          equ	3758	;# 
   318     0EAF                     RD7PPS          equ	3759	;# 
   319     0EB0                     RE0PPS          equ	3760	;# 
   320     0EB1                     RE1PPS          equ	3761	;# 
   321     0EB2                     RE2PPS          equ	3762	;# 
   322     0F0F                     CLCDATA         equ	3855	;# 
   323     0F10                     CLC1CON         equ	3856	;# 
   324     0F11                     CLC1POL         equ	3857	;# 
   325     0F12                     CLC1SEL0        equ	3858	;# 
   326     0F13                     CLC1SEL1        equ	3859	;# 
   327     0F14                     CLC1SEL2        equ	3860	;# 
   328     0F15                     CLC1SEL3        equ	3861	;# 
   329     0F16                     CLC1GLS0        equ	3862	;# 
   330     0F17                     CLC1GLS1        equ	3863	;# 
   331     0F18                     CLC1GLS2        equ	3864	;# 
   332     0F19                     CLC1GLS3        equ	3865	;# 
   333     0F1A                     CLC2CON         equ	3866	;# 
   334     0F1B                     CLC2POL         equ	3867	;# 
   335     0F1C                     CLC2SEL0        equ	3868	;# 
   336     0F1D                     CLC2SEL1        equ	3869	;# 
   337     0F1E                     CLC2SEL2        equ	3870	;# 
   338     0F1F                     CLC2SEL3        equ	3871	;# 
   339     0F20                     CLC2GLS0        equ	3872	;# 
   340     0F21                     CLC2GLS1        equ	3873	;# 
   341     0F22                     CLC2GLS2        equ	3874	;# 
   342     0F23                     CLC2GLS3        equ	3875	;# 
   343     0F24                     CLC3CON         equ	3876	;# 
   344     0F25                     CLC3POL         equ	3877	;# 
   345     0F26                     CLC3SEL0        equ	3878	;# 
   346     0F27                     CLC3SEL1        equ	3879	;# 
   347     0F28                     CLC3SEL2        equ	3880	;# 
   348     0F29                     CLC3SEL3        equ	3881	;# 
   349     0F2A                     CLC3GLS0        equ	3882	;# 
   350     0F2B                     CLC3GLS1        equ	3883	;# 
   351     0F2C                     CLC3GLS2        equ	3884	;# 
   352     0F2D                     CLC3GLS3        equ	3885	;# 
   353     0F2E                     CLC4CON         equ	3886	;# 
   354     0F2F                     CLC4POL         equ	3887	;# 
   355     0F30                     CLC4SEL0        equ	3888	;# 
   356     0F31                     CLC4SEL1        equ	3889	;# 
   357     0F32                     CLC4SEL2        equ	3890	;# 
   358     0F33                     CLC4SEL3        equ	3891	;# 
   359     0F34                     CLC4GLS0        equ	3892	;# 
   360     0F35                     CLC4GLS1        equ	3893	;# 
   361     0F36                     CLC4GLS2        equ	3894	;# 
   362     0F37                     CLC4GLS3        equ	3895	;# 
   363     0FE4                     STATUS_SHAD     equ	4068	;# 
   364     0FE5                     WREG_SHAD       equ	4069	;# 
   365     0FE6                     BSR_SHAD        equ	4070	;# 
   366     0FE7                     PCLATH_SHAD     equ	4071	;# 
   367     0FE8                     FSR0L_SHAD      equ	4072	;# 
   368     0FE9                     FSR0H_SHAD      equ	4073	;# 
   369     0FEA                     FSR1L_SHAD      equ	4074	;# 
   370     0FEB                     FSR1H_SHAD      equ	4075	;# 
   371     0FED                     STKPTR          equ	4077	;# 
   372     0FEE                     TOSL            equ	4078	;# 
   373     0FEF                     TOSH            equ	4079	;# 
   374     000D                     _PORTBbits      set	13
   375     001B                     _PR2            set	27
   376     001C                     _T2CONbits      set	28
   377     008D                     _TRISBbits      set	141
   378     008D                     _TRISB          set	141
   379     008F                     _TRISD          set	143
   380     010D                     _LATB           set	269
   381     010F                     _LATD           set	271
   382     018D                     _ANSELB         set	397
   383     061A                     _PWM4DCL        set	1562
   384     061B                     _PWM4DCH        set	1563
   385     061C                     _PWM4CONbits    set	1564
   386     0EA8                     _RD0PPS         set	3752
   387                           
   388                           	psect	cinit
   389     07FD                     start_initialization:	
   390                           ; #config settings
   391                           
   392     07FD                     __initialization:
   393     07FD                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396     07FD                     __end_of__initialization:
   397     07FD  0020               	movlb	0
   398     07FE  3187  2F2C         	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	cstackCOMMON
   401     0070                     __pcstackCOMMON:
   402     0070                     ?_init_ports:
   403     0070                     ?_init_pwm4:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_update_pwm_duty_cycle:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_setup:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ?___fltol:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ___fltol@f1:	
   419                           ; 4 bytes @ 0x0
   420                           
   421     0070                     ??_init_ports:	
   422                           ; 4 bytes @ 0x0
   423                           
   424     0070                     ??_init_pwm4:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ??_setup:	
   428                           ; 1 bytes @ 0x0
   429                           
   430                           
   431                           ; 1 bytes @ 0x0
   432     0070                     	ds	4
   433     0074                     ??___fltol:
   434                           
   435                           ; 1 bytes @ 0x4
   436     0074                     	ds	4
   437     0078                     ___fltol@sign1:
   438                           
   439                           ; 1 bytes @ 0x8
   440     0078                     	ds	1
   441     0079                     ___fltol@exp1:
   442                           
   443                           ; 1 bytes @ 0x9
   444     0079                     	ds	1
   445     007A                     ?_set_pwm_duty_cycle:
   446     007A                     set_pwm_duty_cycle@pwm_value:	
   447                           ; 1 bytes @ 0xA
   448                           
   449                           
   450                           ; 2 bytes @ 0xA
   451     007A                     	ds	2
   452     007C                     ??_set_pwm_duty_cycle:
   453                           
   454                           ; 1 bytes @ 0xC
   455     007C                     	ds	2
   456     007E                     ??_update_pwm_duty_cycle:
   457     007E                     ??_main:	
   458                           ; 1 bytes @ 0xE
   459                           
   460                           
   461                           	psect	cstackBANK0
   462     0020                     __pcstackBANK0:	
   463                           ; 1 bytes @ 0xE
   464                           
   465     0020                     _update_pwm_duty_cycle$146:
   466                           
   467                           ; 4 bytes @ 0x0
   468     0020                     	ds	4
   469                           
   470                           	psect	maintext
   471     072C                     __pmaintext:	
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 63 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B1F/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels required when called: 2
   497 ;; This function calls:
   498 ;;		_setup
   499 ;;		_update_pwm_duty_cycle
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     072C                     _main:	
   506                           ;psect for function _main
   507                           
   508     072C                     l691:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main.c: 64:     setup();
   514     072C  3187  2725  3187   	fcall	_setup
   515     072F                     l50:	
   516                           ;main.c: 65:     while (1) {
   517                           
   518                           
   519                           ;main.c: 66:         update_pwm_duty_cycle();
   520     072F  3187  2766  3187   	fcall	_update_pwm_duty_cycle
   521     0732  2F2F               	goto	l50
   522     0733  3180  2802         	ljmp	start
   523     0735                     __end_of_main:
   524                           
   525                           	psect	text1
   526     0766                     __ptext1:	
   527 ;; *************** function _update_pwm_duty_cycle *****************
   528 ;; Defined at:
   529 ;;		line 52 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   544 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   546 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   547 ;;Total ram usage:        4 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 1
   550 ;; This function calls:
   551 ;;		___fltol
   552 ;;		_set_pwm_duty_cycle
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558     0766                     _update_pwm_duty_cycle:	
   559                           ;psect for function _update_pwm_duty_cycle
   560                           
   561     0766                     l683:	
   562                           ;incstack = 0
   563                           ; Regs used in _update_pwm_duty_cycle: [wreg+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;main.c: 53:     set_pwm_duty_cycle((PORTBbits.RB0 == 0) ? ((1 * 4 * (199 + 1))) : ((0.1
      +                           * 4 * (199 + 1))));
   567     0766  0020               	movlb	0	; select bank0
   568     0767  1C0D               	btfss	13,0	;volatile
   569     0768  2F6A               	goto	u241
   570     0769  2F6B               	goto	u240
   571     076A                     u241:
   572     076A  2F74               	goto	l687
   573     076B                     u240:
   574     076B                     l685:
   575     076B  3042               	movlw	66
   576     076C  00A3               	movwf	_update_pwm_duty_cycle$146+3
   577     076D  30A0               	movlw	160
   578     076E  00A2               	movwf	_update_pwm_duty_cycle$146+2
   579     076F  3000               	movlw	0
   580     0770  00A1               	movwf	_update_pwm_duty_cycle$146+1
   581     0771  3000               	movlw	0
   582     0772  00A0               	movwf	_update_pwm_duty_cycle$146
   583     0773  2F7C               	goto	l689
   584     0774                     l687:
   585     0774  3044               	movlw	68
   586     0775  00A3               	movwf	_update_pwm_duty_cycle$146+3
   587     0776  3048               	movlw	72
   588     0777  00A2               	movwf	_update_pwm_duty_cycle$146+2
   589     0778  3000               	movlw	0
   590     0779  00A1               	movwf	_update_pwm_duty_cycle$146+1
   591     077A  3000               	movlw	0
   592     077B  00A0               	movwf	_update_pwm_duty_cycle$146
   593     077C                     l689:
   594     077C  0823               	movf	_update_pwm_duty_cycle$146+3,w
   595     077D  00F3               	movwf	___fltol@f1+3
   596     077E  0822               	movf	_update_pwm_duty_cycle$146+2,w
   597     077F  00F2               	movwf	___fltol@f1+2
   598     0780  0821               	movf	_update_pwm_duty_cycle$146+1,w
   599     0781  00F1               	movwf	___fltol@f1+1
   600     0782  0820               	movf	_update_pwm_duty_cycle$146,w
   601     0783  00F0               	movwf	___fltol@f1
   602     0784  3187  278F  3187   	fcall	___fltol
   603     0787  0871               	movf	?___fltol+1,w
   604     0788  00FB               	movwf	set_pwm_duty_cycle@pwm_value+1
   605     0789  0870               	movf	?___fltol,w
   606     078A  00FA               	movwf	set_pwm_duty_cycle@pwm_value
   607     078B  3187  2751  3187   	fcall	_set_pwm_duty_cycle
   608     078E                     l42:
   609     078E  0008               	return
   610     078F                     __end_of_update_pwm_duty_cycle:
   611                           
   612                           	psect	text2
   613     0751                     __ptext2:	
   614 ;; *************** function _set_pwm_duty_cycle *****************
   615 ;; Defined at:
   616 ;;		line 46 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  pwm_value       2   10[COMMON] unsigned int 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        4 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_update_pwm_duty_cycle
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643     0751                     _set_pwm_duty_cycle:	
   644                           ;psect for function _set_pwm_duty_cycle
   645                           
   646     0751                     l645:	
   647                           ;incstack = 0
   648                           ; Regs used in _set_pwm_duty_cycle: [wreg+status,2+status,0]
   649                           
   650                           
   651                           ;main.c: 47:     PWM4DCH = (pwm_value >> 2) & 0xFF;
   652     0751  087B               	movf	set_pwm_duty_cycle@pwm_value+1,w
   653     0752  00FD               	movwf	??_set_pwm_duty_cycle+1
   654     0753  087A               	movf	set_pwm_duty_cycle@pwm_value,w
   655     0754  00FC               	movwf	??_set_pwm_duty_cycle
   656     0755  36FD               	lsrf	??_set_pwm_duty_cycle+1,f
   657     0756  0CFC               	rrf	??_set_pwm_duty_cycle,f
   658     0757  36FD               	lsrf	??_set_pwm_duty_cycle+1,f
   659     0758  0CFC               	rrf	??_set_pwm_duty_cycle,f
   660     0759  087C               	movf	??_set_pwm_duty_cycle,w
   661     075A  002C               	movlb	12	; select bank12
   662     075B  009B               	movwf	27	;volatile
   663                           
   664                           ;main.c: 48:     PWM4DCL = (pwm_value << 6) & 0xC0;
   665     075C  087A               	movf	set_pwm_duty_cycle@pwm_value,w
   666     075D  00FC               	movwf	??_set_pwm_duty_cycle
   667     075E  3006               	movlw	6
   668     075F                     u135:
   669     075F  35FC               	lslf	??_set_pwm_duty_cycle,f
   670     0760  0B89               	decfsz	9,f
   671     0761  2F5F               	goto	u135
   672     0762  087C               	movf	??_set_pwm_duty_cycle,w
   673     0763  39C0               	andlw	192
   674     0764  009A               	movwf	26	;volatile
   675     0765                     l35:
   676     0765  0008               	return
   677     0766                     __end_of_set_pwm_duty_cycle:
   678                           
   679                           	psect	text3
   680     078F                     __ptext3:	
   681 ;; *************** function ___fltol *****************
   682 ;; Defined at:
   683 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  f1              4    0[COMMON] void 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  exp1            1    9[COMMON] unsigned char 
   688 ;;  sign1           1    8[COMMON] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  4    0[COMMON] long 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   701 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:       10 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_update_pwm_duty_cycle
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711     078F                     ___fltol:	
   712                           ;psect for function ___fltol
   713                           
   714     078F                     l647:	
   715                           ;incstack = 0
   716                           ; Regs used in ___fltol: [wreg+status,2+status,0]
   717                           
   718     078F  1003               	clrc
   719     0790  0D72               	rlf	___fltol@f1+2,w
   720     0791  0D73               	rlf	___fltol@f1+3,w
   721     0792  00F9               	movwf	___fltol@exp1
   722     0793  0879               	movf	___fltol@exp1,w
   723     0794  1D03               	btfss	3,2
   724     0795  2F97               	goto	u141
   725     0796  2F98               	goto	u140
   726     0797                     u141:
   727     0797  2FA1               	goto	l653
   728     0798                     u140:
   729     0798                     l649:
   730     0798  3000               	movlw	0
   731     0799  00F3               	movwf	?___fltol+3
   732     079A  3000               	movlw	0
   733     079B  00F2               	movwf	?___fltol+2
   734     079C  3000               	movlw	0
   735     079D  00F1               	movwf	?___fltol+1
   736     079E  3000               	movlw	0
   737     079F  00F0               	movwf	?___fltol
   738     07A0  2FFC               	goto	l315
   739     07A1                     l653:
   740     07A1  0870               	movf	___fltol@f1,w
   741     07A2  00F4               	movwf	??___fltol
   742     07A3  0871               	movf	___fltol@f1+1,w
   743     07A4  00F5               	movwf	??___fltol+1
   744     07A5  0872               	movf	___fltol@f1+2,w
   745     07A6  00F6               	movwf	??___fltol+2
   746     07A7  0873               	movf	___fltol@f1+3,w
   747     07A8  00F7               	movwf	??___fltol+3
   748     07A9  301F               	movlw	31
   749     07AA                     u155:
   750     07AA  36F7               	lsrf	??___fltol+3,f
   751     07AB  0CF6               	rrf	??___fltol+2,f
   752     07AC  0CF5               	rrf	??___fltol+1,f
   753     07AD  0CF4               	rrf	??___fltol,f
   754     07AE                     u150:
   755     07AE  0B89               	decfsz	9,f
   756     07AF  2FAA               	goto	u155
   757     07B0  0874               	movf	??___fltol,w
   758     07B1  00F8               	movwf	___fltol@sign1
   759     07B2                     l655:
   760     07B2  17F2               	bsf	___fltol@f1+2,7
   761     07B3                     l657:
   762     07B3  30FF               	movlw	255
   763     07B4  05F0               	andwf	___fltol@f1,f
   764     07B5  30FF               	movlw	255
   765     07B6  05F1               	andwf	___fltol@f1+1,f
   766     07B7  30FF               	movlw	255
   767     07B8  05F2               	andwf	___fltol@f1+2,f
   768     07B9  3000               	movlw	0
   769     07BA  05F3               	andwf	___fltol@f1+3,f
   770     07BB                     l659:
   771     07BB  3096               	movlw	150
   772     07BC  02F9               	subwf	___fltol@exp1,f
   773     07BD                     l661:
   774     07BD  1FF9               	btfss	___fltol@exp1,7
   775     07BE  2FC0               	goto	u161
   776     07BF  2FC1               	goto	u160
   777     07C0                     u161:
   778     07C0  2FD7               	goto	l671
   779     07C1                     u160:
   780     07C1                     l663:
   781     07C1  0879               	movf	___fltol@exp1,w
   782     07C2  3A80               	xorlw	128
   783     07C3  3E97               	addlw	151
   784     07C4  1803               	skipnc
   785     07C5  2FC7               	goto	u171
   786     07C6  2FC8               	goto	u170
   787     07C7                     u171:
   788     07C7  2FC9               	goto	l669
   789     07C8                     u170:
   790     07C8  2F98               	goto	l649
   791     07C9                     l669:
   792     07C9  3001               	movlw	1
   793     07CA                     u185:
   794     07CA  36F3               	lsrf	___fltol@f1+3,f
   795     07CB  0CF2               	rrf	___fltol@f1+2,f
   796     07CC  0CF1               	rrf	___fltol@f1+1,f
   797     07CD  0CF0               	rrf	___fltol@f1,f
   798     07CE  0B89               	decfsz	9,f
   799     07CF  2FCA               	goto	u185
   800     07D0  3001               	movlw	1
   801     07D1  07F9               	addwf	___fltol@exp1,f
   802     07D2  1D03               	btfss	3,2
   803     07D3  2FD5               	goto	u191
   804     07D4  2FD6               	goto	u190
   805     07D5                     u191:
   806     07D5  2FC9               	goto	l669
   807     07D6                     u190:
   808     07D6  2FEC               	goto	l679
   809     07D7                     l671:
   810     07D7  3020               	movlw	32
   811     07D8  0279               	subwf	___fltol@exp1,w
   812     07D9  1C03               	skipc
   813     07DA  2FDC               	goto	u201
   814     07DB  2FDD               	goto	u200
   815     07DC                     u201:
   816     07DC  2FE7               	goto	l322
   817     07DD                     u200:
   818     07DD  2F98               	goto	l649
   819     07DE                     l677:
   820     07DE  3001               	movlw	1
   821     07DF                     u215:
   822     07DF  35F0               	lslf	___fltol@f1,f
   823     07E0  0DF1               	rlf	___fltol@f1+1,f
   824     07E1  0DF2               	rlf	___fltol@f1+2,f
   825     07E2  0DF3               	rlf	___fltol@f1+3,f
   826     07E3  0B89               	decfsz	9,f
   827     07E4  2FDF               	goto	u215
   828     07E5  3001               	movlw	1
   829     07E6  02F9               	subwf	___fltol@exp1,f
   830     07E7                     l322:
   831     07E7  0879               	movf	___fltol@exp1,w
   832     07E8  1D03               	btfss	3,2
   833     07E9  2FEB               	goto	u221
   834     07EA  2FEC               	goto	u220
   835     07EB                     u221:
   836     07EB  2FDE               	goto	l677
   837     07EC                     u220:
   838     07EC                     l679:
   839     07EC  0878               	movf	___fltol@sign1,w
   840     07ED  1903               	btfsc	3,2
   841     07EE  2FF0               	goto	u231
   842     07EF  2FF1               	goto	u230
   843     07F0                     u231:
   844     07F0  2FFC               	goto	l325
   845     07F1                     u230:
   846     07F1                     l681:
   847     07F1  09F0               	comf	___fltol@f1,f
   848     07F2  09F1               	comf	___fltol@f1+1,f
   849     07F3  09F2               	comf	___fltol@f1+2,f
   850     07F4  09F3               	comf	___fltol@f1+3,f
   851     07F5  0AF0               	incf	___fltol@f1,f
   852     07F6  1903               	skipnz
   853     07F7  0AF1               	incf	___fltol@f1+1,f
   854     07F8  1903               	skipnz
   855     07F9  0AF2               	incf	___fltol@f1+2,f
   856     07FA  1903               	skipnz
   857     07FB  0AF3               	incf	___fltol@f1+3,f
   858     07FC                     l325:
   859     07FC                     l315:
   860     07FC  0008               	return
   861     07FD                     __end_of___fltol:
   862                           
   863                           	psect	text4
   864     0725                     __ptext4:	
   865 ;; *************** function _setup *****************
   866 ;; Defined at:
   867 ;;		line 57 in file "main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		_init_ports
   890 ;;		_init_pwm4
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     0725                     _setup:	
   897                           ;psect for function _setup
   898                           
   899     0725                     l639:	
   900                           ;incstack = 0
   901                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   902                           
   903                           
   904                           ;main.c: 58:     init_ports();
   905     0725  3187  2735  3187   	fcall	_init_ports
   906     0728                     l641:
   907                           
   908                           ;main.c: 59:     init_pwm4();
   909     0728  3187  2740  3187   	fcall	_init_pwm4
   910     072B                     l45:
   911     072B  0008               	return
   912     072C                     __end_of_setup:
   913                           
   914                           	psect	text5
   915     0740                     __ptext5:	
   916 ;; *************** function _init_pwm4 *****************
   917 ;; Defined at:
   918 ;;		line 35 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_setup
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945     0740                     _init_pwm4:	
   946                           ;psect for function _init_pwm4
   947                           
   948     0740                     l583:	
   949                           ;incstack = 0
   950                           ; Regs used in _init_pwm4: [wreg+status,2+status,0]
   951                           
   952                           
   953                           ;main.c: 36:     T2CONbits.T2CKPS = 0b10;
   954     0740  0020               	movlb	0	; select bank0
   955     0741  081C               	movf	28,w	;volatile
   956     0742  39FC               	andlw	-4
   957     0743  3802               	iorlw	2
   958     0744  009C               	movwf	28	;volatile
   959                           
   960                           ;main.c: 37:     T2CONbits.T2OUTPS = 0b0000;
   961     0745  3087               	movlw	-121
   962     0746  059C               	andwf	28,f	;volatile
   963     0747                     l585:
   964                           
   965                           ;main.c: 38:     PR2 = 199;
   966     0747  30C7               	movlw	199
   967     0748  009B               	movwf	27	;volatile
   968     0749                     l587:
   969                           
   970                           ;main.c: 40:     PWM4CONbits.PWM4EN = 1;
   971     0749  002C               	movlb	12	; select bank12
   972     074A  179C               	bsf	28,7	;volatile
   973     074B                     l589:
   974                           
   975                           ;main.c: 41:     RD0PPS = 0x0F;
   976     074B  300F               	movlw	15
   977     074C  003D               	movlb	29	; select bank29
   978     074D  00A8               	movwf	40	;volatile
   979     074E                     l591:
   980                           
   981                           ;main.c: 42:     T2CONbits.TMR2ON = 1;
   982     074E  0020               	movlb	0	; select bank0
   983     074F  151C               	bsf	28,2	;volatile
   984     0750                     l32:
   985     0750  0008               	return
   986     0751                     __end_of_init_pwm4:
   987                           
   988                           	psect	text6
   989     0735                     __ptext6:	
   990 ;; *************** function _init_ports *****************
   991 ;; Defined at:
   992 ;;		line 24 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_setup
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019     0735                     _init_ports:	
  1020                           ;psect for function _init_ports
  1021                           
  1022     0735                     l579:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _init_ports: [status,2]
  1025                           
  1026                           
  1027                           ;main.c: 25:     TRISD = 0x00;
  1028     0735  0021               	movlb	1	; select bank1
  1029     0736  018F               	clrf	15	;volatile
  1030                           
  1031                           ;main.c: 26:     TRISB = 0x00;
  1032     0737  018D               	clrf	13	;volatile
  1033                           
  1034                           ;main.c: 27:     LATD = 0x00;
  1035     0738  0022               	movlb	2	; select bank2
  1036     0739  018F               	clrf	15	;volatile
  1037                           
  1038                           ;main.c: 28:     LATB = 0x00;
  1039     073A  018D               	clrf	13	;volatile
  1040     073B                     l581:
  1041                           
  1042                           ;main.c: 30:     TRISBbits.TRISB0 = 1;
  1043     073B  0021               	movlb	1	; select bank1
  1044     073C  140D               	bsf	13,0	;volatile
  1045                           
  1046                           ;main.c: 31:     ANSELB = 0x00;
  1047     073D  0023               	movlb	3	; select bank3
  1048     073E  018D               	clrf	13	;volatile
  1049     073F                     l29:
  1050     073F  0008               	return
  1051     0740                     __end_of_init_ports:
  1052     0003                     ___latbits      equ	3
  1053     007E                     btemp           set	126	;btemp
  1054     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _update_pwm_duty_cycle->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol

Critical Paths under _main in BANK0

    _main->_update_pwm_duty_cycle

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     299
                              _setup
              _update_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _update_pwm_duty_cycle                                4     4      0     299
                                              0 BANK0      4     4      0
                            ___fltol
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _set_pwm_duty_cycle                                   4     2      2      45
                                             10 COMMON     4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _init_ports
                          _init_pwm4
 ---------------------------------------------------------------------------------
 (2) _init_pwm4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _init_ports
     _init_pwm4
   _update_pwm_duty_cycle
     ___fltol
     _set_pwm_duty_cycle
       ___fltol (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      4       4      5.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 11 08:46:28 2025

                           l32 0750                             l42 078E                             l50 072F  
                           l35 0765                             l29 073F                             l45 072B  
                          l322 07E7                            l315 07FC                            l325 07FC  
                          l641 0728                            l581 073B                            l661 07BD  
                          l653 07A1                            l645 0751                            l591 074E  
                          l583 0740                            l639 0725                            l663 07C1  
                          l671 07D7                            l655 07B2                            l647 078F  
                          l585 0747                            l681 07F1                            l657 07B3  
                          l649 0798                            l579 0735                            l587 0749  
                          l659 07BB                            l683 0766                            l691 072C  
                          l589 074B                            l677 07DE                            l669 07C9  
                          l685 076B                            l679 07EC                            l687 0774  
                          l689 077C                            u200 07DD                            u201 07DC  
                          u220 07EC                            u140 0798                            u221 07EB  
                          u141 0797                            u230 07F1                            u150 07AE  
                          u231 07F0                            u215 07DF                            u135 075F  
                          u160 07C1                            u240 076B                            u161 07C0  
                          u241 076A                            u170 07C8                            u171 07C7  
                          u155 07AA                            u190 07D6                            _PR2 001B  
                          u191 07D5                            u185 07CA                            wreg 0009  
                 ___fltol@exp1 0079                           _LATB 010D                           _LATD 010F  
                         _main 072C                           btemp 007E                           start 0002  
                ___fltol@sign1 0078      _update_pwm_duty_cycle$146 0020                          ?_main 0070  
              __end_of___fltol 07FD                          _TRISB 008D                          _TRISD 008F  
                        _setup 0725                          status 0003                          wtemp0 007E  
              __initialization 07FD                   __end_of_main 0735    set_pwm_duty_cycle@pwm_value 007A  
                       ??_main 007E          _update_pwm_duty_cycle 0766                         ?_setup 0070  
                       _ANSELB 018D                         _RD0PPS 0EA8             _set_pwm_duty_cycle 0751  
          ?_set_pwm_duty_cycle 007A                      ??___fltol 0074           ??_set_pwm_duty_cycle 007C  
      __end_of__initialization 07FD                     ___fltol@f1 0070                 __pcstackCOMMON 0070  
                __end_of_setup 072C         ?_update_pwm_duty_cycle 0070                        ??_setup 0070  
                   __pmaintext 072C                        _PWM4DCH 061B                        _PWM4DCL 061A  
                      ___fltol 078F                     _init_ports 0735                        __ptext1 0766  
                      __ptext2 0751                        __ptext3 078F                        __ptext4 0725  
                      __ptext5 0740                        __ptext6 0735                      _T2CONbits 001C  
            __end_of_init_pwm4 0751           end_of_initialization 07FD                      _PORTBbits 000D  
                    _TRISBbits 008D        ??_update_pwm_duty_cycle 007E                    ?_init_ports 0070  
          start_initialization 07FD                      ___latbits 0003                  __pcstackBANK0 0020  
                     ?___fltol 0070                      _init_pwm4 0740                     ?_init_pwm4 0070  
__end_of_update_pwm_duty_cycle 078F                   ??_init_ports 0070             __end_of_init_ports 0740  
   __end_of_set_pwm_duty_cycle 0766                    _PWM4CONbits 061C                    ??_init_pwm4 0070  
